#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8673519326481956153) {
   out_8673519326481956153[0] = 0;
   out_8673519326481956153[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8673519326481956153[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8673519326481956153[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8673519326481956153[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8673519326481956153[5] = -sin(in_vec[1]);
   out_8673519326481956153[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8673519326481956153[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8673519326481956153[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8673519326481956153[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8673519326481956153[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8673519326481956153[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8673519326481956153[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8673519326481956153[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8673519326481956153[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8673519326481956153[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8673519326481956153[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8673519326481956153[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6509520593120827794) {
   out_6509520593120827794[0] = delta_x[0] + nom_x[0];
   out_6509520593120827794[1] = delta_x[1] + nom_x[1];
   out_6509520593120827794[2] = delta_x[2] + nom_x[2];
   out_6509520593120827794[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6509520593120827794[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6509520593120827794[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6509520593120827794[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6509520593120827794[7] = delta_x[6] + nom_x[7];
   out_6509520593120827794[8] = delta_x[7] + nom_x[8];
   out_6509520593120827794[9] = delta_x[8] + nom_x[9];
   out_6509520593120827794[10] = delta_x[9] + nom_x[10];
   out_6509520593120827794[11] = delta_x[10] + nom_x[11];
   out_6509520593120827794[12] = delta_x[11] + nom_x[12];
   out_6509520593120827794[13] = delta_x[12] + nom_x[13];
   out_6509520593120827794[14] = delta_x[13] + nom_x[14];
   out_6509520593120827794[15] = delta_x[14] + nom_x[15];
   out_6509520593120827794[16] = delta_x[15] + nom_x[16];
   out_6509520593120827794[17] = delta_x[16] + nom_x[17];
   out_6509520593120827794[18] = delta_x[17] + nom_x[18];
   out_6509520593120827794[19] = delta_x[18] + nom_x[19];
   out_6509520593120827794[20] = delta_x[19] + nom_x[20];
   out_6509520593120827794[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1854403484088584618) {
   out_1854403484088584618[0] = -nom_x[0] + true_x[0];
   out_1854403484088584618[1] = -nom_x[1] + true_x[1];
   out_1854403484088584618[2] = -nom_x[2] + true_x[2];
   out_1854403484088584618[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1854403484088584618[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1854403484088584618[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1854403484088584618[6] = -nom_x[7] + true_x[7];
   out_1854403484088584618[7] = -nom_x[8] + true_x[8];
   out_1854403484088584618[8] = -nom_x[9] + true_x[9];
   out_1854403484088584618[9] = -nom_x[10] + true_x[10];
   out_1854403484088584618[10] = -nom_x[11] + true_x[11];
   out_1854403484088584618[11] = -nom_x[12] + true_x[12];
   out_1854403484088584618[12] = -nom_x[13] + true_x[13];
   out_1854403484088584618[13] = -nom_x[14] + true_x[14];
   out_1854403484088584618[14] = -nom_x[15] + true_x[15];
   out_1854403484088584618[15] = -nom_x[16] + true_x[16];
   out_1854403484088584618[16] = -nom_x[17] + true_x[17];
   out_1854403484088584618[17] = -nom_x[18] + true_x[18];
   out_1854403484088584618[18] = -nom_x[19] + true_x[19];
   out_1854403484088584618[19] = -nom_x[20] + true_x[20];
   out_1854403484088584618[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2341655123536354807) {
   out_2341655123536354807[0] = 1.0;
   out_2341655123536354807[1] = 0;
   out_2341655123536354807[2] = 0;
   out_2341655123536354807[3] = 0;
   out_2341655123536354807[4] = 0;
   out_2341655123536354807[5] = 0;
   out_2341655123536354807[6] = 0;
   out_2341655123536354807[7] = 0;
   out_2341655123536354807[8] = 0;
   out_2341655123536354807[9] = 0;
   out_2341655123536354807[10] = 0;
   out_2341655123536354807[11] = 0;
   out_2341655123536354807[12] = 0;
   out_2341655123536354807[13] = 0;
   out_2341655123536354807[14] = 0;
   out_2341655123536354807[15] = 0;
   out_2341655123536354807[16] = 0;
   out_2341655123536354807[17] = 0;
   out_2341655123536354807[18] = 0;
   out_2341655123536354807[19] = 0;
   out_2341655123536354807[20] = 0;
   out_2341655123536354807[21] = 0;
   out_2341655123536354807[22] = 1.0;
   out_2341655123536354807[23] = 0;
   out_2341655123536354807[24] = 0;
   out_2341655123536354807[25] = 0;
   out_2341655123536354807[26] = 0;
   out_2341655123536354807[27] = 0;
   out_2341655123536354807[28] = 0;
   out_2341655123536354807[29] = 0;
   out_2341655123536354807[30] = 0;
   out_2341655123536354807[31] = 0;
   out_2341655123536354807[32] = 0;
   out_2341655123536354807[33] = 0;
   out_2341655123536354807[34] = 0;
   out_2341655123536354807[35] = 0;
   out_2341655123536354807[36] = 0;
   out_2341655123536354807[37] = 0;
   out_2341655123536354807[38] = 0;
   out_2341655123536354807[39] = 0;
   out_2341655123536354807[40] = 0;
   out_2341655123536354807[41] = 0;
   out_2341655123536354807[42] = 0;
   out_2341655123536354807[43] = 0;
   out_2341655123536354807[44] = 1.0;
   out_2341655123536354807[45] = 0;
   out_2341655123536354807[46] = 0;
   out_2341655123536354807[47] = 0;
   out_2341655123536354807[48] = 0;
   out_2341655123536354807[49] = 0;
   out_2341655123536354807[50] = 0;
   out_2341655123536354807[51] = 0;
   out_2341655123536354807[52] = 0;
   out_2341655123536354807[53] = 0;
   out_2341655123536354807[54] = 0;
   out_2341655123536354807[55] = 0;
   out_2341655123536354807[56] = 0;
   out_2341655123536354807[57] = 0;
   out_2341655123536354807[58] = 0;
   out_2341655123536354807[59] = 0;
   out_2341655123536354807[60] = 0;
   out_2341655123536354807[61] = 0;
   out_2341655123536354807[62] = 0;
   out_2341655123536354807[63] = 0;
   out_2341655123536354807[64] = 0;
   out_2341655123536354807[65] = 0;
   out_2341655123536354807[66] = -0.5*state[4];
   out_2341655123536354807[67] = -0.5*state[5];
   out_2341655123536354807[68] = -0.5*state[6];
   out_2341655123536354807[69] = 0;
   out_2341655123536354807[70] = 0;
   out_2341655123536354807[71] = 0;
   out_2341655123536354807[72] = 0;
   out_2341655123536354807[73] = 0;
   out_2341655123536354807[74] = 0;
   out_2341655123536354807[75] = 0;
   out_2341655123536354807[76] = 0;
   out_2341655123536354807[77] = 0;
   out_2341655123536354807[78] = 0;
   out_2341655123536354807[79] = 0;
   out_2341655123536354807[80] = 0;
   out_2341655123536354807[81] = 0;
   out_2341655123536354807[82] = 0;
   out_2341655123536354807[83] = 0;
   out_2341655123536354807[84] = 0;
   out_2341655123536354807[85] = 0;
   out_2341655123536354807[86] = 0;
   out_2341655123536354807[87] = 0.5*state[3];
   out_2341655123536354807[88] = 0.5*state[6];
   out_2341655123536354807[89] = -0.5*state[5];
   out_2341655123536354807[90] = 0;
   out_2341655123536354807[91] = 0;
   out_2341655123536354807[92] = 0;
   out_2341655123536354807[93] = 0;
   out_2341655123536354807[94] = 0;
   out_2341655123536354807[95] = 0;
   out_2341655123536354807[96] = 0;
   out_2341655123536354807[97] = 0;
   out_2341655123536354807[98] = 0;
   out_2341655123536354807[99] = 0;
   out_2341655123536354807[100] = 0;
   out_2341655123536354807[101] = 0;
   out_2341655123536354807[102] = 0;
   out_2341655123536354807[103] = 0;
   out_2341655123536354807[104] = 0;
   out_2341655123536354807[105] = 0;
   out_2341655123536354807[106] = 0;
   out_2341655123536354807[107] = 0;
   out_2341655123536354807[108] = -0.5*state[6];
   out_2341655123536354807[109] = 0.5*state[3];
   out_2341655123536354807[110] = 0.5*state[4];
   out_2341655123536354807[111] = 0;
   out_2341655123536354807[112] = 0;
   out_2341655123536354807[113] = 0;
   out_2341655123536354807[114] = 0;
   out_2341655123536354807[115] = 0;
   out_2341655123536354807[116] = 0;
   out_2341655123536354807[117] = 0;
   out_2341655123536354807[118] = 0;
   out_2341655123536354807[119] = 0;
   out_2341655123536354807[120] = 0;
   out_2341655123536354807[121] = 0;
   out_2341655123536354807[122] = 0;
   out_2341655123536354807[123] = 0;
   out_2341655123536354807[124] = 0;
   out_2341655123536354807[125] = 0;
   out_2341655123536354807[126] = 0;
   out_2341655123536354807[127] = 0;
   out_2341655123536354807[128] = 0;
   out_2341655123536354807[129] = 0.5*state[5];
   out_2341655123536354807[130] = -0.5*state[4];
   out_2341655123536354807[131] = 0.5*state[3];
   out_2341655123536354807[132] = 0;
   out_2341655123536354807[133] = 0;
   out_2341655123536354807[134] = 0;
   out_2341655123536354807[135] = 0;
   out_2341655123536354807[136] = 0;
   out_2341655123536354807[137] = 0;
   out_2341655123536354807[138] = 0;
   out_2341655123536354807[139] = 0;
   out_2341655123536354807[140] = 0;
   out_2341655123536354807[141] = 0;
   out_2341655123536354807[142] = 0;
   out_2341655123536354807[143] = 0;
   out_2341655123536354807[144] = 0;
   out_2341655123536354807[145] = 0;
   out_2341655123536354807[146] = 0;
   out_2341655123536354807[147] = 0;
   out_2341655123536354807[148] = 0;
   out_2341655123536354807[149] = 0;
   out_2341655123536354807[150] = 0;
   out_2341655123536354807[151] = 0;
   out_2341655123536354807[152] = 0;
   out_2341655123536354807[153] = 1.0;
   out_2341655123536354807[154] = 0;
   out_2341655123536354807[155] = 0;
   out_2341655123536354807[156] = 0;
   out_2341655123536354807[157] = 0;
   out_2341655123536354807[158] = 0;
   out_2341655123536354807[159] = 0;
   out_2341655123536354807[160] = 0;
   out_2341655123536354807[161] = 0;
   out_2341655123536354807[162] = 0;
   out_2341655123536354807[163] = 0;
   out_2341655123536354807[164] = 0;
   out_2341655123536354807[165] = 0;
   out_2341655123536354807[166] = 0;
   out_2341655123536354807[167] = 0;
   out_2341655123536354807[168] = 0;
   out_2341655123536354807[169] = 0;
   out_2341655123536354807[170] = 0;
   out_2341655123536354807[171] = 0;
   out_2341655123536354807[172] = 0;
   out_2341655123536354807[173] = 0;
   out_2341655123536354807[174] = 0;
   out_2341655123536354807[175] = 1.0;
   out_2341655123536354807[176] = 0;
   out_2341655123536354807[177] = 0;
   out_2341655123536354807[178] = 0;
   out_2341655123536354807[179] = 0;
   out_2341655123536354807[180] = 0;
   out_2341655123536354807[181] = 0;
   out_2341655123536354807[182] = 0;
   out_2341655123536354807[183] = 0;
   out_2341655123536354807[184] = 0;
   out_2341655123536354807[185] = 0;
   out_2341655123536354807[186] = 0;
   out_2341655123536354807[187] = 0;
   out_2341655123536354807[188] = 0;
   out_2341655123536354807[189] = 0;
   out_2341655123536354807[190] = 0;
   out_2341655123536354807[191] = 0;
   out_2341655123536354807[192] = 0;
   out_2341655123536354807[193] = 0;
   out_2341655123536354807[194] = 0;
   out_2341655123536354807[195] = 0;
   out_2341655123536354807[196] = 0;
   out_2341655123536354807[197] = 1.0;
   out_2341655123536354807[198] = 0;
   out_2341655123536354807[199] = 0;
   out_2341655123536354807[200] = 0;
   out_2341655123536354807[201] = 0;
   out_2341655123536354807[202] = 0;
   out_2341655123536354807[203] = 0;
   out_2341655123536354807[204] = 0;
   out_2341655123536354807[205] = 0;
   out_2341655123536354807[206] = 0;
   out_2341655123536354807[207] = 0;
   out_2341655123536354807[208] = 0;
   out_2341655123536354807[209] = 0;
   out_2341655123536354807[210] = 0;
   out_2341655123536354807[211] = 0;
   out_2341655123536354807[212] = 0;
   out_2341655123536354807[213] = 0;
   out_2341655123536354807[214] = 0;
   out_2341655123536354807[215] = 0;
   out_2341655123536354807[216] = 0;
   out_2341655123536354807[217] = 0;
   out_2341655123536354807[218] = 0;
   out_2341655123536354807[219] = 1.0;
   out_2341655123536354807[220] = 0;
   out_2341655123536354807[221] = 0;
   out_2341655123536354807[222] = 0;
   out_2341655123536354807[223] = 0;
   out_2341655123536354807[224] = 0;
   out_2341655123536354807[225] = 0;
   out_2341655123536354807[226] = 0;
   out_2341655123536354807[227] = 0;
   out_2341655123536354807[228] = 0;
   out_2341655123536354807[229] = 0;
   out_2341655123536354807[230] = 0;
   out_2341655123536354807[231] = 0;
   out_2341655123536354807[232] = 0;
   out_2341655123536354807[233] = 0;
   out_2341655123536354807[234] = 0;
   out_2341655123536354807[235] = 0;
   out_2341655123536354807[236] = 0;
   out_2341655123536354807[237] = 0;
   out_2341655123536354807[238] = 0;
   out_2341655123536354807[239] = 0;
   out_2341655123536354807[240] = 0;
   out_2341655123536354807[241] = 1.0;
   out_2341655123536354807[242] = 0;
   out_2341655123536354807[243] = 0;
   out_2341655123536354807[244] = 0;
   out_2341655123536354807[245] = 0;
   out_2341655123536354807[246] = 0;
   out_2341655123536354807[247] = 0;
   out_2341655123536354807[248] = 0;
   out_2341655123536354807[249] = 0;
   out_2341655123536354807[250] = 0;
   out_2341655123536354807[251] = 0;
   out_2341655123536354807[252] = 0;
   out_2341655123536354807[253] = 0;
   out_2341655123536354807[254] = 0;
   out_2341655123536354807[255] = 0;
   out_2341655123536354807[256] = 0;
   out_2341655123536354807[257] = 0;
   out_2341655123536354807[258] = 0;
   out_2341655123536354807[259] = 0;
   out_2341655123536354807[260] = 0;
   out_2341655123536354807[261] = 0;
   out_2341655123536354807[262] = 0;
   out_2341655123536354807[263] = 1.0;
   out_2341655123536354807[264] = 0;
   out_2341655123536354807[265] = 0;
   out_2341655123536354807[266] = 0;
   out_2341655123536354807[267] = 0;
   out_2341655123536354807[268] = 0;
   out_2341655123536354807[269] = 0;
   out_2341655123536354807[270] = 0;
   out_2341655123536354807[271] = 0;
   out_2341655123536354807[272] = 0;
   out_2341655123536354807[273] = 0;
   out_2341655123536354807[274] = 0;
   out_2341655123536354807[275] = 0;
   out_2341655123536354807[276] = 0;
   out_2341655123536354807[277] = 0;
   out_2341655123536354807[278] = 0;
   out_2341655123536354807[279] = 0;
   out_2341655123536354807[280] = 0;
   out_2341655123536354807[281] = 0;
   out_2341655123536354807[282] = 0;
   out_2341655123536354807[283] = 0;
   out_2341655123536354807[284] = 0;
   out_2341655123536354807[285] = 1.0;
   out_2341655123536354807[286] = 0;
   out_2341655123536354807[287] = 0;
   out_2341655123536354807[288] = 0;
   out_2341655123536354807[289] = 0;
   out_2341655123536354807[290] = 0;
   out_2341655123536354807[291] = 0;
   out_2341655123536354807[292] = 0;
   out_2341655123536354807[293] = 0;
   out_2341655123536354807[294] = 0;
   out_2341655123536354807[295] = 0;
   out_2341655123536354807[296] = 0;
   out_2341655123536354807[297] = 0;
   out_2341655123536354807[298] = 0;
   out_2341655123536354807[299] = 0;
   out_2341655123536354807[300] = 0;
   out_2341655123536354807[301] = 0;
   out_2341655123536354807[302] = 0;
   out_2341655123536354807[303] = 0;
   out_2341655123536354807[304] = 0;
   out_2341655123536354807[305] = 0;
   out_2341655123536354807[306] = 0;
   out_2341655123536354807[307] = 1.0;
   out_2341655123536354807[308] = 0;
   out_2341655123536354807[309] = 0;
   out_2341655123536354807[310] = 0;
   out_2341655123536354807[311] = 0;
   out_2341655123536354807[312] = 0;
   out_2341655123536354807[313] = 0;
   out_2341655123536354807[314] = 0;
   out_2341655123536354807[315] = 0;
   out_2341655123536354807[316] = 0;
   out_2341655123536354807[317] = 0;
   out_2341655123536354807[318] = 0;
   out_2341655123536354807[319] = 0;
   out_2341655123536354807[320] = 0;
   out_2341655123536354807[321] = 0;
   out_2341655123536354807[322] = 0;
   out_2341655123536354807[323] = 0;
   out_2341655123536354807[324] = 0;
   out_2341655123536354807[325] = 0;
   out_2341655123536354807[326] = 0;
   out_2341655123536354807[327] = 0;
   out_2341655123536354807[328] = 0;
   out_2341655123536354807[329] = 1.0;
   out_2341655123536354807[330] = 0;
   out_2341655123536354807[331] = 0;
   out_2341655123536354807[332] = 0;
   out_2341655123536354807[333] = 0;
   out_2341655123536354807[334] = 0;
   out_2341655123536354807[335] = 0;
   out_2341655123536354807[336] = 0;
   out_2341655123536354807[337] = 0;
   out_2341655123536354807[338] = 0;
   out_2341655123536354807[339] = 0;
   out_2341655123536354807[340] = 0;
   out_2341655123536354807[341] = 0;
   out_2341655123536354807[342] = 0;
   out_2341655123536354807[343] = 0;
   out_2341655123536354807[344] = 0;
   out_2341655123536354807[345] = 0;
   out_2341655123536354807[346] = 0;
   out_2341655123536354807[347] = 0;
   out_2341655123536354807[348] = 0;
   out_2341655123536354807[349] = 0;
   out_2341655123536354807[350] = 0;
   out_2341655123536354807[351] = 1.0;
   out_2341655123536354807[352] = 0;
   out_2341655123536354807[353] = 0;
   out_2341655123536354807[354] = 0;
   out_2341655123536354807[355] = 0;
   out_2341655123536354807[356] = 0;
   out_2341655123536354807[357] = 0;
   out_2341655123536354807[358] = 0;
   out_2341655123536354807[359] = 0;
   out_2341655123536354807[360] = 0;
   out_2341655123536354807[361] = 0;
   out_2341655123536354807[362] = 0;
   out_2341655123536354807[363] = 0;
   out_2341655123536354807[364] = 0;
   out_2341655123536354807[365] = 0;
   out_2341655123536354807[366] = 0;
   out_2341655123536354807[367] = 0;
   out_2341655123536354807[368] = 0;
   out_2341655123536354807[369] = 0;
   out_2341655123536354807[370] = 0;
   out_2341655123536354807[371] = 0;
   out_2341655123536354807[372] = 0;
   out_2341655123536354807[373] = 1.0;
   out_2341655123536354807[374] = 0;
   out_2341655123536354807[375] = 0;
   out_2341655123536354807[376] = 0;
   out_2341655123536354807[377] = 0;
   out_2341655123536354807[378] = 0;
   out_2341655123536354807[379] = 0;
   out_2341655123536354807[380] = 0;
   out_2341655123536354807[381] = 0;
   out_2341655123536354807[382] = 0;
   out_2341655123536354807[383] = 0;
   out_2341655123536354807[384] = 0;
   out_2341655123536354807[385] = 0;
   out_2341655123536354807[386] = 0;
   out_2341655123536354807[387] = 0;
   out_2341655123536354807[388] = 0;
   out_2341655123536354807[389] = 0;
   out_2341655123536354807[390] = 0;
   out_2341655123536354807[391] = 0;
   out_2341655123536354807[392] = 0;
   out_2341655123536354807[393] = 0;
   out_2341655123536354807[394] = 0;
   out_2341655123536354807[395] = 1.0;
   out_2341655123536354807[396] = 0;
   out_2341655123536354807[397] = 0;
   out_2341655123536354807[398] = 0;
   out_2341655123536354807[399] = 0;
   out_2341655123536354807[400] = 0;
   out_2341655123536354807[401] = 0;
   out_2341655123536354807[402] = 0;
   out_2341655123536354807[403] = 0;
   out_2341655123536354807[404] = 0;
   out_2341655123536354807[405] = 0;
   out_2341655123536354807[406] = 0;
   out_2341655123536354807[407] = 0;
   out_2341655123536354807[408] = 0;
   out_2341655123536354807[409] = 0;
   out_2341655123536354807[410] = 0;
   out_2341655123536354807[411] = 0;
   out_2341655123536354807[412] = 0;
   out_2341655123536354807[413] = 0;
   out_2341655123536354807[414] = 0;
   out_2341655123536354807[415] = 0;
   out_2341655123536354807[416] = 0;
   out_2341655123536354807[417] = 1.0;
   out_2341655123536354807[418] = 0;
   out_2341655123536354807[419] = 0;
   out_2341655123536354807[420] = 0;
   out_2341655123536354807[421] = 0;
   out_2341655123536354807[422] = 0;
   out_2341655123536354807[423] = 0;
   out_2341655123536354807[424] = 0;
   out_2341655123536354807[425] = 0;
   out_2341655123536354807[426] = 0;
   out_2341655123536354807[427] = 0;
   out_2341655123536354807[428] = 0;
   out_2341655123536354807[429] = 0;
   out_2341655123536354807[430] = 0;
   out_2341655123536354807[431] = 0;
   out_2341655123536354807[432] = 0;
   out_2341655123536354807[433] = 0;
   out_2341655123536354807[434] = 0;
   out_2341655123536354807[435] = 0;
   out_2341655123536354807[436] = 0;
   out_2341655123536354807[437] = 0;
   out_2341655123536354807[438] = 0;
   out_2341655123536354807[439] = 1.0;
   out_2341655123536354807[440] = 0;
   out_2341655123536354807[441] = 0;
   out_2341655123536354807[442] = 0;
   out_2341655123536354807[443] = 0;
   out_2341655123536354807[444] = 0;
   out_2341655123536354807[445] = 0;
   out_2341655123536354807[446] = 0;
   out_2341655123536354807[447] = 0;
   out_2341655123536354807[448] = 0;
   out_2341655123536354807[449] = 0;
   out_2341655123536354807[450] = 0;
   out_2341655123536354807[451] = 0;
   out_2341655123536354807[452] = 0;
   out_2341655123536354807[453] = 0;
   out_2341655123536354807[454] = 0;
   out_2341655123536354807[455] = 0;
   out_2341655123536354807[456] = 0;
   out_2341655123536354807[457] = 0;
   out_2341655123536354807[458] = 0;
   out_2341655123536354807[459] = 0;
   out_2341655123536354807[460] = 0;
   out_2341655123536354807[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_9130093515614849635) {
   out_9130093515614849635[0] = dt*state[7] + state[0];
   out_9130093515614849635[1] = dt*state[8] + state[1];
   out_9130093515614849635[2] = dt*state[9] + state[2];
   out_9130093515614849635[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9130093515614849635[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9130093515614849635[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9130093515614849635[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9130093515614849635[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_9130093515614849635[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_9130093515614849635[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_9130093515614849635[10] = state[10];
   out_9130093515614849635[11] = state[11];
   out_9130093515614849635[12] = state[12];
   out_9130093515614849635[13] = state[13];
   out_9130093515614849635[14] = state[14];
   out_9130093515614849635[15] = state[15];
   out_9130093515614849635[16] = state[16];
   out_9130093515614849635[17] = state[17];
   out_9130093515614849635[18] = state[18];
   out_9130093515614849635[19] = state[19];
   out_9130093515614849635[20] = state[20];
   out_9130093515614849635[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1465107715934980664) {
   out_1465107715934980664[0] = 1;
   out_1465107715934980664[1] = 0;
   out_1465107715934980664[2] = 0;
   out_1465107715934980664[3] = 0;
   out_1465107715934980664[4] = 0;
   out_1465107715934980664[5] = 0;
   out_1465107715934980664[6] = dt;
   out_1465107715934980664[7] = 0;
   out_1465107715934980664[8] = 0;
   out_1465107715934980664[9] = 0;
   out_1465107715934980664[10] = 0;
   out_1465107715934980664[11] = 0;
   out_1465107715934980664[12] = 0;
   out_1465107715934980664[13] = 0;
   out_1465107715934980664[14] = 0;
   out_1465107715934980664[15] = 0;
   out_1465107715934980664[16] = 0;
   out_1465107715934980664[17] = 0;
   out_1465107715934980664[18] = 0;
   out_1465107715934980664[19] = 0;
   out_1465107715934980664[20] = 0;
   out_1465107715934980664[21] = 0;
   out_1465107715934980664[22] = 1;
   out_1465107715934980664[23] = 0;
   out_1465107715934980664[24] = 0;
   out_1465107715934980664[25] = 0;
   out_1465107715934980664[26] = 0;
   out_1465107715934980664[27] = 0;
   out_1465107715934980664[28] = dt;
   out_1465107715934980664[29] = 0;
   out_1465107715934980664[30] = 0;
   out_1465107715934980664[31] = 0;
   out_1465107715934980664[32] = 0;
   out_1465107715934980664[33] = 0;
   out_1465107715934980664[34] = 0;
   out_1465107715934980664[35] = 0;
   out_1465107715934980664[36] = 0;
   out_1465107715934980664[37] = 0;
   out_1465107715934980664[38] = 0;
   out_1465107715934980664[39] = 0;
   out_1465107715934980664[40] = 0;
   out_1465107715934980664[41] = 0;
   out_1465107715934980664[42] = 0;
   out_1465107715934980664[43] = 0;
   out_1465107715934980664[44] = 1;
   out_1465107715934980664[45] = 0;
   out_1465107715934980664[46] = 0;
   out_1465107715934980664[47] = 0;
   out_1465107715934980664[48] = 0;
   out_1465107715934980664[49] = 0;
   out_1465107715934980664[50] = dt;
   out_1465107715934980664[51] = 0;
   out_1465107715934980664[52] = 0;
   out_1465107715934980664[53] = 0;
   out_1465107715934980664[54] = 0;
   out_1465107715934980664[55] = 0;
   out_1465107715934980664[56] = 0;
   out_1465107715934980664[57] = 0;
   out_1465107715934980664[58] = 0;
   out_1465107715934980664[59] = 0;
   out_1465107715934980664[60] = 0;
   out_1465107715934980664[61] = 0;
   out_1465107715934980664[62] = 0;
   out_1465107715934980664[63] = 0;
   out_1465107715934980664[64] = 0;
   out_1465107715934980664[65] = 0;
   out_1465107715934980664[66] = 1;
   out_1465107715934980664[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1465107715934980664[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1465107715934980664[69] = 0;
   out_1465107715934980664[70] = 0;
   out_1465107715934980664[71] = 0;
   out_1465107715934980664[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1465107715934980664[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1465107715934980664[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1465107715934980664[75] = 0;
   out_1465107715934980664[76] = 0;
   out_1465107715934980664[77] = 0;
   out_1465107715934980664[78] = 0;
   out_1465107715934980664[79] = 0;
   out_1465107715934980664[80] = 0;
   out_1465107715934980664[81] = 0;
   out_1465107715934980664[82] = 0;
   out_1465107715934980664[83] = 0;
   out_1465107715934980664[84] = 0;
   out_1465107715934980664[85] = 0;
   out_1465107715934980664[86] = 0;
   out_1465107715934980664[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1465107715934980664[88] = 1;
   out_1465107715934980664[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1465107715934980664[90] = 0;
   out_1465107715934980664[91] = 0;
   out_1465107715934980664[92] = 0;
   out_1465107715934980664[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1465107715934980664[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1465107715934980664[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1465107715934980664[96] = 0;
   out_1465107715934980664[97] = 0;
   out_1465107715934980664[98] = 0;
   out_1465107715934980664[99] = 0;
   out_1465107715934980664[100] = 0;
   out_1465107715934980664[101] = 0;
   out_1465107715934980664[102] = 0;
   out_1465107715934980664[103] = 0;
   out_1465107715934980664[104] = 0;
   out_1465107715934980664[105] = 0;
   out_1465107715934980664[106] = 0;
   out_1465107715934980664[107] = 0;
   out_1465107715934980664[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1465107715934980664[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1465107715934980664[110] = 1;
   out_1465107715934980664[111] = 0;
   out_1465107715934980664[112] = 0;
   out_1465107715934980664[113] = 0;
   out_1465107715934980664[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1465107715934980664[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1465107715934980664[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1465107715934980664[117] = 0;
   out_1465107715934980664[118] = 0;
   out_1465107715934980664[119] = 0;
   out_1465107715934980664[120] = 0;
   out_1465107715934980664[121] = 0;
   out_1465107715934980664[122] = 0;
   out_1465107715934980664[123] = 0;
   out_1465107715934980664[124] = 0;
   out_1465107715934980664[125] = 0;
   out_1465107715934980664[126] = 0;
   out_1465107715934980664[127] = 0;
   out_1465107715934980664[128] = 0;
   out_1465107715934980664[129] = 0;
   out_1465107715934980664[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1465107715934980664[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1465107715934980664[132] = 1;
   out_1465107715934980664[133] = 0;
   out_1465107715934980664[134] = 0;
   out_1465107715934980664[135] = 0;
   out_1465107715934980664[136] = 0;
   out_1465107715934980664[137] = 0;
   out_1465107715934980664[138] = 0;
   out_1465107715934980664[139] = 0;
   out_1465107715934980664[140] = 0;
   out_1465107715934980664[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1465107715934980664[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1465107715934980664[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1465107715934980664[144] = 0;
   out_1465107715934980664[145] = 0;
   out_1465107715934980664[146] = 0;
   out_1465107715934980664[147] = 0;
   out_1465107715934980664[148] = 0;
   out_1465107715934980664[149] = 0;
   out_1465107715934980664[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1465107715934980664[151] = 0;
   out_1465107715934980664[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1465107715934980664[153] = 0;
   out_1465107715934980664[154] = 1;
   out_1465107715934980664[155] = 0;
   out_1465107715934980664[156] = 0;
   out_1465107715934980664[157] = 0;
   out_1465107715934980664[158] = 0;
   out_1465107715934980664[159] = 0;
   out_1465107715934980664[160] = 0;
   out_1465107715934980664[161] = 0;
   out_1465107715934980664[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1465107715934980664[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1465107715934980664[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1465107715934980664[165] = 0;
   out_1465107715934980664[166] = 0;
   out_1465107715934980664[167] = 0;
   out_1465107715934980664[168] = 0;
   out_1465107715934980664[169] = 0;
   out_1465107715934980664[170] = 0;
   out_1465107715934980664[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1465107715934980664[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1465107715934980664[173] = 0;
   out_1465107715934980664[174] = 0;
   out_1465107715934980664[175] = 0;
   out_1465107715934980664[176] = 1;
   out_1465107715934980664[177] = 0;
   out_1465107715934980664[178] = 0;
   out_1465107715934980664[179] = 0;
   out_1465107715934980664[180] = 0;
   out_1465107715934980664[181] = 0;
   out_1465107715934980664[182] = 0;
   out_1465107715934980664[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1465107715934980664[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1465107715934980664[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1465107715934980664[186] = 0;
   out_1465107715934980664[187] = 0;
   out_1465107715934980664[188] = 0;
   out_1465107715934980664[189] = 0;
   out_1465107715934980664[190] = 0;
   out_1465107715934980664[191] = 0;
   out_1465107715934980664[192] = 0;
   out_1465107715934980664[193] = 0;
   out_1465107715934980664[194] = 0;
   out_1465107715934980664[195] = 0;
   out_1465107715934980664[196] = 0;
   out_1465107715934980664[197] = 0;
   out_1465107715934980664[198] = 1;
   out_1465107715934980664[199] = 0;
   out_1465107715934980664[200] = 0;
   out_1465107715934980664[201] = 0;
   out_1465107715934980664[202] = 0;
   out_1465107715934980664[203] = 0;
   out_1465107715934980664[204] = 0;
   out_1465107715934980664[205] = 0;
   out_1465107715934980664[206] = 0;
   out_1465107715934980664[207] = 0;
   out_1465107715934980664[208] = 0;
   out_1465107715934980664[209] = 0;
   out_1465107715934980664[210] = 0;
   out_1465107715934980664[211] = 0;
   out_1465107715934980664[212] = 0;
   out_1465107715934980664[213] = 0;
   out_1465107715934980664[214] = 0;
   out_1465107715934980664[215] = 0;
   out_1465107715934980664[216] = 0;
   out_1465107715934980664[217] = 0;
   out_1465107715934980664[218] = 0;
   out_1465107715934980664[219] = 0;
   out_1465107715934980664[220] = 1;
   out_1465107715934980664[221] = 0;
   out_1465107715934980664[222] = 0;
   out_1465107715934980664[223] = 0;
   out_1465107715934980664[224] = 0;
   out_1465107715934980664[225] = 0;
   out_1465107715934980664[226] = 0;
   out_1465107715934980664[227] = 0;
   out_1465107715934980664[228] = 0;
   out_1465107715934980664[229] = 0;
   out_1465107715934980664[230] = 0;
   out_1465107715934980664[231] = 0;
   out_1465107715934980664[232] = 0;
   out_1465107715934980664[233] = 0;
   out_1465107715934980664[234] = 0;
   out_1465107715934980664[235] = 0;
   out_1465107715934980664[236] = 0;
   out_1465107715934980664[237] = 0;
   out_1465107715934980664[238] = 0;
   out_1465107715934980664[239] = 0;
   out_1465107715934980664[240] = 0;
   out_1465107715934980664[241] = 0;
   out_1465107715934980664[242] = 1;
   out_1465107715934980664[243] = 0;
   out_1465107715934980664[244] = 0;
   out_1465107715934980664[245] = 0;
   out_1465107715934980664[246] = 0;
   out_1465107715934980664[247] = 0;
   out_1465107715934980664[248] = 0;
   out_1465107715934980664[249] = 0;
   out_1465107715934980664[250] = 0;
   out_1465107715934980664[251] = 0;
   out_1465107715934980664[252] = 0;
   out_1465107715934980664[253] = 0;
   out_1465107715934980664[254] = 0;
   out_1465107715934980664[255] = 0;
   out_1465107715934980664[256] = 0;
   out_1465107715934980664[257] = 0;
   out_1465107715934980664[258] = 0;
   out_1465107715934980664[259] = 0;
   out_1465107715934980664[260] = 0;
   out_1465107715934980664[261] = 0;
   out_1465107715934980664[262] = 0;
   out_1465107715934980664[263] = 0;
   out_1465107715934980664[264] = 1;
   out_1465107715934980664[265] = 0;
   out_1465107715934980664[266] = 0;
   out_1465107715934980664[267] = 0;
   out_1465107715934980664[268] = 0;
   out_1465107715934980664[269] = 0;
   out_1465107715934980664[270] = 0;
   out_1465107715934980664[271] = 0;
   out_1465107715934980664[272] = 0;
   out_1465107715934980664[273] = 0;
   out_1465107715934980664[274] = 0;
   out_1465107715934980664[275] = 0;
   out_1465107715934980664[276] = 0;
   out_1465107715934980664[277] = 0;
   out_1465107715934980664[278] = 0;
   out_1465107715934980664[279] = 0;
   out_1465107715934980664[280] = 0;
   out_1465107715934980664[281] = 0;
   out_1465107715934980664[282] = 0;
   out_1465107715934980664[283] = 0;
   out_1465107715934980664[284] = 0;
   out_1465107715934980664[285] = 0;
   out_1465107715934980664[286] = 1;
   out_1465107715934980664[287] = 0;
   out_1465107715934980664[288] = 0;
   out_1465107715934980664[289] = 0;
   out_1465107715934980664[290] = 0;
   out_1465107715934980664[291] = 0;
   out_1465107715934980664[292] = 0;
   out_1465107715934980664[293] = 0;
   out_1465107715934980664[294] = 0;
   out_1465107715934980664[295] = 0;
   out_1465107715934980664[296] = 0;
   out_1465107715934980664[297] = 0;
   out_1465107715934980664[298] = 0;
   out_1465107715934980664[299] = 0;
   out_1465107715934980664[300] = 0;
   out_1465107715934980664[301] = 0;
   out_1465107715934980664[302] = 0;
   out_1465107715934980664[303] = 0;
   out_1465107715934980664[304] = 0;
   out_1465107715934980664[305] = 0;
   out_1465107715934980664[306] = 0;
   out_1465107715934980664[307] = 0;
   out_1465107715934980664[308] = 1;
   out_1465107715934980664[309] = 0;
   out_1465107715934980664[310] = 0;
   out_1465107715934980664[311] = 0;
   out_1465107715934980664[312] = 0;
   out_1465107715934980664[313] = 0;
   out_1465107715934980664[314] = 0;
   out_1465107715934980664[315] = 0;
   out_1465107715934980664[316] = 0;
   out_1465107715934980664[317] = 0;
   out_1465107715934980664[318] = 0;
   out_1465107715934980664[319] = 0;
   out_1465107715934980664[320] = 0;
   out_1465107715934980664[321] = 0;
   out_1465107715934980664[322] = 0;
   out_1465107715934980664[323] = 0;
   out_1465107715934980664[324] = 0;
   out_1465107715934980664[325] = 0;
   out_1465107715934980664[326] = 0;
   out_1465107715934980664[327] = 0;
   out_1465107715934980664[328] = 0;
   out_1465107715934980664[329] = 0;
   out_1465107715934980664[330] = 1;
   out_1465107715934980664[331] = 0;
   out_1465107715934980664[332] = 0;
   out_1465107715934980664[333] = 0;
   out_1465107715934980664[334] = 0;
   out_1465107715934980664[335] = 0;
   out_1465107715934980664[336] = 0;
   out_1465107715934980664[337] = 0;
   out_1465107715934980664[338] = 0;
   out_1465107715934980664[339] = 0;
   out_1465107715934980664[340] = 0;
   out_1465107715934980664[341] = 0;
   out_1465107715934980664[342] = 0;
   out_1465107715934980664[343] = 0;
   out_1465107715934980664[344] = 0;
   out_1465107715934980664[345] = 0;
   out_1465107715934980664[346] = 0;
   out_1465107715934980664[347] = 0;
   out_1465107715934980664[348] = 0;
   out_1465107715934980664[349] = 0;
   out_1465107715934980664[350] = 0;
   out_1465107715934980664[351] = 0;
   out_1465107715934980664[352] = 1;
   out_1465107715934980664[353] = 0;
   out_1465107715934980664[354] = 0;
   out_1465107715934980664[355] = 0;
   out_1465107715934980664[356] = 0;
   out_1465107715934980664[357] = 0;
   out_1465107715934980664[358] = 0;
   out_1465107715934980664[359] = 0;
   out_1465107715934980664[360] = 0;
   out_1465107715934980664[361] = 0;
   out_1465107715934980664[362] = 0;
   out_1465107715934980664[363] = 0;
   out_1465107715934980664[364] = 0;
   out_1465107715934980664[365] = 0;
   out_1465107715934980664[366] = 0;
   out_1465107715934980664[367] = 0;
   out_1465107715934980664[368] = 0;
   out_1465107715934980664[369] = 0;
   out_1465107715934980664[370] = 0;
   out_1465107715934980664[371] = 0;
   out_1465107715934980664[372] = 0;
   out_1465107715934980664[373] = 0;
   out_1465107715934980664[374] = 1;
   out_1465107715934980664[375] = 0;
   out_1465107715934980664[376] = 0;
   out_1465107715934980664[377] = 0;
   out_1465107715934980664[378] = 0;
   out_1465107715934980664[379] = 0;
   out_1465107715934980664[380] = 0;
   out_1465107715934980664[381] = 0;
   out_1465107715934980664[382] = 0;
   out_1465107715934980664[383] = 0;
   out_1465107715934980664[384] = 0;
   out_1465107715934980664[385] = 0;
   out_1465107715934980664[386] = 0;
   out_1465107715934980664[387] = 0;
   out_1465107715934980664[388] = 0;
   out_1465107715934980664[389] = 0;
   out_1465107715934980664[390] = 0;
   out_1465107715934980664[391] = 0;
   out_1465107715934980664[392] = 0;
   out_1465107715934980664[393] = 0;
   out_1465107715934980664[394] = 0;
   out_1465107715934980664[395] = 0;
   out_1465107715934980664[396] = 1;
   out_1465107715934980664[397] = 0;
   out_1465107715934980664[398] = 0;
   out_1465107715934980664[399] = 0;
   out_1465107715934980664[400] = 0;
   out_1465107715934980664[401] = 0;
   out_1465107715934980664[402] = 0;
   out_1465107715934980664[403] = 0;
   out_1465107715934980664[404] = 0;
   out_1465107715934980664[405] = 0;
   out_1465107715934980664[406] = 0;
   out_1465107715934980664[407] = 0;
   out_1465107715934980664[408] = 0;
   out_1465107715934980664[409] = 0;
   out_1465107715934980664[410] = 0;
   out_1465107715934980664[411] = 0;
   out_1465107715934980664[412] = 0;
   out_1465107715934980664[413] = 0;
   out_1465107715934980664[414] = 0;
   out_1465107715934980664[415] = 0;
   out_1465107715934980664[416] = 0;
   out_1465107715934980664[417] = 0;
   out_1465107715934980664[418] = 1;
   out_1465107715934980664[419] = 0;
   out_1465107715934980664[420] = 0;
   out_1465107715934980664[421] = 0;
   out_1465107715934980664[422] = 0;
   out_1465107715934980664[423] = 0;
   out_1465107715934980664[424] = 0;
   out_1465107715934980664[425] = 0;
   out_1465107715934980664[426] = 0;
   out_1465107715934980664[427] = 0;
   out_1465107715934980664[428] = 0;
   out_1465107715934980664[429] = 0;
   out_1465107715934980664[430] = 0;
   out_1465107715934980664[431] = 0;
   out_1465107715934980664[432] = 0;
   out_1465107715934980664[433] = 0;
   out_1465107715934980664[434] = 0;
   out_1465107715934980664[435] = 0;
   out_1465107715934980664[436] = 0;
   out_1465107715934980664[437] = 0;
   out_1465107715934980664[438] = 0;
   out_1465107715934980664[439] = 0;
   out_1465107715934980664[440] = 1;
}
void h_4(double *state, double *unused, double *out_5550033602791381692) {
   out_5550033602791381692[0] = state[10] + state[13];
   out_5550033602791381692[1] = state[11] + state[14];
   out_5550033602791381692[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6513682271191925253) {
   out_6513682271191925253[0] = 0;
   out_6513682271191925253[1] = 0;
   out_6513682271191925253[2] = 0;
   out_6513682271191925253[3] = 0;
   out_6513682271191925253[4] = 0;
   out_6513682271191925253[5] = 0;
   out_6513682271191925253[6] = 0;
   out_6513682271191925253[7] = 0;
   out_6513682271191925253[8] = 0;
   out_6513682271191925253[9] = 0;
   out_6513682271191925253[10] = 1;
   out_6513682271191925253[11] = 0;
   out_6513682271191925253[12] = 0;
   out_6513682271191925253[13] = 1;
   out_6513682271191925253[14] = 0;
   out_6513682271191925253[15] = 0;
   out_6513682271191925253[16] = 0;
   out_6513682271191925253[17] = 0;
   out_6513682271191925253[18] = 0;
   out_6513682271191925253[19] = 0;
   out_6513682271191925253[20] = 0;
   out_6513682271191925253[21] = 0;
   out_6513682271191925253[22] = 0;
   out_6513682271191925253[23] = 0;
   out_6513682271191925253[24] = 0;
   out_6513682271191925253[25] = 0;
   out_6513682271191925253[26] = 0;
   out_6513682271191925253[27] = 0;
   out_6513682271191925253[28] = 0;
   out_6513682271191925253[29] = 0;
   out_6513682271191925253[30] = 0;
   out_6513682271191925253[31] = 0;
   out_6513682271191925253[32] = 0;
   out_6513682271191925253[33] = 1;
   out_6513682271191925253[34] = 0;
   out_6513682271191925253[35] = 0;
   out_6513682271191925253[36] = 1;
   out_6513682271191925253[37] = 0;
   out_6513682271191925253[38] = 0;
   out_6513682271191925253[39] = 0;
   out_6513682271191925253[40] = 0;
   out_6513682271191925253[41] = 0;
   out_6513682271191925253[42] = 0;
   out_6513682271191925253[43] = 0;
   out_6513682271191925253[44] = 0;
   out_6513682271191925253[45] = 0;
   out_6513682271191925253[46] = 0;
   out_6513682271191925253[47] = 0;
   out_6513682271191925253[48] = 0;
   out_6513682271191925253[49] = 0;
   out_6513682271191925253[50] = 0;
   out_6513682271191925253[51] = 0;
   out_6513682271191925253[52] = 0;
   out_6513682271191925253[53] = 0;
   out_6513682271191925253[54] = 0;
   out_6513682271191925253[55] = 0;
   out_6513682271191925253[56] = 1;
   out_6513682271191925253[57] = 0;
   out_6513682271191925253[58] = 0;
   out_6513682271191925253[59] = 1;
   out_6513682271191925253[60] = 0;
   out_6513682271191925253[61] = 0;
   out_6513682271191925253[62] = 0;
   out_6513682271191925253[63] = 0;
   out_6513682271191925253[64] = 0;
   out_6513682271191925253[65] = 0;
}
void h_9(double *state, double *unused, double *out_1917081015155043783) {
   out_1917081015155043783[0] = state[10];
   out_1917081015155043783[1] = state[11];
   out_1917081015155043783[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6754871917821515898) {
   out_6754871917821515898[0] = 0;
   out_6754871917821515898[1] = 0;
   out_6754871917821515898[2] = 0;
   out_6754871917821515898[3] = 0;
   out_6754871917821515898[4] = 0;
   out_6754871917821515898[5] = 0;
   out_6754871917821515898[6] = 0;
   out_6754871917821515898[7] = 0;
   out_6754871917821515898[8] = 0;
   out_6754871917821515898[9] = 0;
   out_6754871917821515898[10] = 1;
   out_6754871917821515898[11] = 0;
   out_6754871917821515898[12] = 0;
   out_6754871917821515898[13] = 0;
   out_6754871917821515898[14] = 0;
   out_6754871917821515898[15] = 0;
   out_6754871917821515898[16] = 0;
   out_6754871917821515898[17] = 0;
   out_6754871917821515898[18] = 0;
   out_6754871917821515898[19] = 0;
   out_6754871917821515898[20] = 0;
   out_6754871917821515898[21] = 0;
   out_6754871917821515898[22] = 0;
   out_6754871917821515898[23] = 0;
   out_6754871917821515898[24] = 0;
   out_6754871917821515898[25] = 0;
   out_6754871917821515898[26] = 0;
   out_6754871917821515898[27] = 0;
   out_6754871917821515898[28] = 0;
   out_6754871917821515898[29] = 0;
   out_6754871917821515898[30] = 0;
   out_6754871917821515898[31] = 0;
   out_6754871917821515898[32] = 0;
   out_6754871917821515898[33] = 1;
   out_6754871917821515898[34] = 0;
   out_6754871917821515898[35] = 0;
   out_6754871917821515898[36] = 0;
   out_6754871917821515898[37] = 0;
   out_6754871917821515898[38] = 0;
   out_6754871917821515898[39] = 0;
   out_6754871917821515898[40] = 0;
   out_6754871917821515898[41] = 0;
   out_6754871917821515898[42] = 0;
   out_6754871917821515898[43] = 0;
   out_6754871917821515898[44] = 0;
   out_6754871917821515898[45] = 0;
   out_6754871917821515898[46] = 0;
   out_6754871917821515898[47] = 0;
   out_6754871917821515898[48] = 0;
   out_6754871917821515898[49] = 0;
   out_6754871917821515898[50] = 0;
   out_6754871917821515898[51] = 0;
   out_6754871917821515898[52] = 0;
   out_6754871917821515898[53] = 0;
   out_6754871917821515898[54] = 0;
   out_6754871917821515898[55] = 0;
   out_6754871917821515898[56] = 1;
   out_6754871917821515898[57] = 0;
   out_6754871917821515898[58] = 0;
   out_6754871917821515898[59] = 0;
   out_6754871917821515898[60] = 0;
   out_6754871917821515898[61] = 0;
   out_6754871917821515898[62] = 0;
   out_6754871917821515898[63] = 0;
   out_6754871917821515898[64] = 0;
   out_6754871917821515898[65] = 0;
}
void h_10(double *state, double *unused, double *out_6306219088906799002) {
   out_6306219088906799002[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6306219088906799002[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6306219088906799002[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6227195161888097549) {
   out_6227195161888097549[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6227195161888097549[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6227195161888097549[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6227195161888097549[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6227195161888097549[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6227195161888097549[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6227195161888097549[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6227195161888097549[7] = 0;
   out_6227195161888097549[8] = 0;
   out_6227195161888097549[9] = 0;
   out_6227195161888097549[10] = 0;
   out_6227195161888097549[11] = 0;
   out_6227195161888097549[12] = 0;
   out_6227195161888097549[13] = 0;
   out_6227195161888097549[14] = 0;
   out_6227195161888097549[15] = 0;
   out_6227195161888097549[16] = 1;
   out_6227195161888097549[17] = 0;
   out_6227195161888097549[18] = 0;
   out_6227195161888097549[19] = 1;
   out_6227195161888097549[20] = 0;
   out_6227195161888097549[21] = 0;
   out_6227195161888097549[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6227195161888097549[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6227195161888097549[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6227195161888097549[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6227195161888097549[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6227195161888097549[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6227195161888097549[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6227195161888097549[29] = 0;
   out_6227195161888097549[30] = 0;
   out_6227195161888097549[31] = 0;
   out_6227195161888097549[32] = 0;
   out_6227195161888097549[33] = 0;
   out_6227195161888097549[34] = 0;
   out_6227195161888097549[35] = 0;
   out_6227195161888097549[36] = 0;
   out_6227195161888097549[37] = 0;
   out_6227195161888097549[38] = 0;
   out_6227195161888097549[39] = 1;
   out_6227195161888097549[40] = 0;
   out_6227195161888097549[41] = 0;
   out_6227195161888097549[42] = 1;
   out_6227195161888097549[43] = 0;
   out_6227195161888097549[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6227195161888097549[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6227195161888097549[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6227195161888097549[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6227195161888097549[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6227195161888097549[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6227195161888097549[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6227195161888097549[51] = 0;
   out_6227195161888097549[52] = 0;
   out_6227195161888097549[53] = 0;
   out_6227195161888097549[54] = 0;
   out_6227195161888097549[55] = 0;
   out_6227195161888097549[56] = 0;
   out_6227195161888097549[57] = 0;
   out_6227195161888097549[58] = 0;
   out_6227195161888097549[59] = 0;
   out_6227195161888097549[60] = 0;
   out_6227195161888097549[61] = 0;
   out_6227195161888097549[62] = 1;
   out_6227195161888097549[63] = 0;
   out_6227195161888097549[64] = 0;
   out_6227195161888097549[65] = 1;
}
void h_12(double *state, double *unused, double *out_2284330100859273191) {
   out_2284330100859273191[0] = state[0];
   out_2284330100859273191[1] = state[1];
   out_2284330100859273191[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6913605394485664568) {
   out_6913605394485664568[0] = 1;
   out_6913605394485664568[1] = 0;
   out_6913605394485664568[2] = 0;
   out_6913605394485664568[3] = 0;
   out_6913605394485664568[4] = 0;
   out_6913605394485664568[5] = 0;
   out_6913605394485664568[6] = 0;
   out_6913605394485664568[7] = 0;
   out_6913605394485664568[8] = 0;
   out_6913605394485664568[9] = 0;
   out_6913605394485664568[10] = 0;
   out_6913605394485664568[11] = 0;
   out_6913605394485664568[12] = 0;
   out_6913605394485664568[13] = 0;
   out_6913605394485664568[14] = 0;
   out_6913605394485664568[15] = 0;
   out_6913605394485664568[16] = 0;
   out_6913605394485664568[17] = 0;
   out_6913605394485664568[18] = 0;
   out_6913605394485664568[19] = 0;
   out_6913605394485664568[20] = 0;
   out_6913605394485664568[21] = 0;
   out_6913605394485664568[22] = 0;
   out_6913605394485664568[23] = 1;
   out_6913605394485664568[24] = 0;
   out_6913605394485664568[25] = 0;
   out_6913605394485664568[26] = 0;
   out_6913605394485664568[27] = 0;
   out_6913605394485664568[28] = 0;
   out_6913605394485664568[29] = 0;
   out_6913605394485664568[30] = 0;
   out_6913605394485664568[31] = 0;
   out_6913605394485664568[32] = 0;
   out_6913605394485664568[33] = 0;
   out_6913605394485664568[34] = 0;
   out_6913605394485664568[35] = 0;
   out_6913605394485664568[36] = 0;
   out_6913605394485664568[37] = 0;
   out_6913605394485664568[38] = 0;
   out_6913605394485664568[39] = 0;
   out_6913605394485664568[40] = 0;
   out_6913605394485664568[41] = 0;
   out_6913605394485664568[42] = 0;
   out_6913605394485664568[43] = 0;
   out_6913605394485664568[44] = 0;
   out_6913605394485664568[45] = 0;
   out_6913605394485664568[46] = 1;
   out_6913605394485664568[47] = 0;
   out_6913605394485664568[48] = 0;
   out_6913605394485664568[49] = 0;
   out_6913605394485664568[50] = 0;
   out_6913605394485664568[51] = 0;
   out_6913605394485664568[52] = 0;
   out_6913605394485664568[53] = 0;
   out_6913605394485664568[54] = 0;
   out_6913605394485664568[55] = 0;
   out_6913605394485664568[56] = 0;
   out_6913605394485664568[57] = 0;
   out_6913605394485664568[58] = 0;
   out_6913605394485664568[59] = 0;
   out_6913605394485664568[60] = 0;
   out_6913605394485664568[61] = 0;
   out_6913605394485664568[62] = 0;
   out_6913605394485664568[63] = 0;
   out_6913605394485664568[64] = 0;
   out_6913605394485664568[65] = 0;
}
void h_31(double *state, double *unused, double *out_1719538927514605940) {
   out_1719538927514605940[0] = state[7];
   out_1719538927514605940[1] = state[8];
   out_1719538927514605940[2] = state[9];
}
void H_31(double *state, double *unused, double *out_8566399745145018987) {
   out_8566399745145018987[0] = 0;
   out_8566399745145018987[1] = 0;
   out_8566399745145018987[2] = 0;
   out_8566399745145018987[3] = 0;
   out_8566399745145018987[4] = 0;
   out_8566399745145018987[5] = 0;
   out_8566399745145018987[6] = 0;
   out_8566399745145018987[7] = 1;
   out_8566399745145018987[8] = 0;
   out_8566399745145018987[9] = 0;
   out_8566399745145018987[10] = 0;
   out_8566399745145018987[11] = 0;
   out_8566399745145018987[12] = 0;
   out_8566399745145018987[13] = 0;
   out_8566399745145018987[14] = 0;
   out_8566399745145018987[15] = 0;
   out_8566399745145018987[16] = 0;
   out_8566399745145018987[17] = 0;
   out_8566399745145018987[18] = 0;
   out_8566399745145018987[19] = 0;
   out_8566399745145018987[20] = 0;
   out_8566399745145018987[21] = 0;
   out_8566399745145018987[22] = 0;
   out_8566399745145018987[23] = 0;
   out_8566399745145018987[24] = 0;
   out_8566399745145018987[25] = 0;
   out_8566399745145018987[26] = 0;
   out_8566399745145018987[27] = 0;
   out_8566399745145018987[28] = 0;
   out_8566399745145018987[29] = 0;
   out_8566399745145018987[30] = 1;
   out_8566399745145018987[31] = 0;
   out_8566399745145018987[32] = 0;
   out_8566399745145018987[33] = 0;
   out_8566399745145018987[34] = 0;
   out_8566399745145018987[35] = 0;
   out_8566399745145018987[36] = 0;
   out_8566399745145018987[37] = 0;
   out_8566399745145018987[38] = 0;
   out_8566399745145018987[39] = 0;
   out_8566399745145018987[40] = 0;
   out_8566399745145018987[41] = 0;
   out_8566399745145018987[42] = 0;
   out_8566399745145018987[43] = 0;
   out_8566399745145018987[44] = 0;
   out_8566399745145018987[45] = 0;
   out_8566399745145018987[46] = 0;
   out_8566399745145018987[47] = 0;
   out_8566399745145018987[48] = 0;
   out_8566399745145018987[49] = 0;
   out_8566399745145018987[50] = 0;
   out_8566399745145018987[51] = 0;
   out_8566399745145018987[52] = 0;
   out_8566399745145018987[53] = 1;
   out_8566399745145018987[54] = 0;
   out_8566399745145018987[55] = 0;
   out_8566399745145018987[56] = 0;
   out_8566399745145018987[57] = 0;
   out_8566399745145018987[58] = 0;
   out_8566399745145018987[59] = 0;
   out_8566399745145018987[60] = 0;
   out_8566399745145018987[61] = 0;
   out_8566399745145018987[62] = 0;
   out_8566399745145018987[63] = 0;
   out_8566399745145018987[64] = 0;
   out_8566399745145018987[65] = 0;
}
void h_32(double *state, double *unused, double *out_4339813958746689082) {
   out_4339813958746689082[0] = state[3];
   out_4339813958746689082[1] = state[4];
   out_4339813958746689082[2] = state[5];
   out_4339813958746689082[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2965479824870416273) {
   out_2965479824870416273[0] = 0;
   out_2965479824870416273[1] = 0;
   out_2965479824870416273[2] = 0;
   out_2965479824870416273[3] = 1;
   out_2965479824870416273[4] = 0;
   out_2965479824870416273[5] = 0;
   out_2965479824870416273[6] = 0;
   out_2965479824870416273[7] = 0;
   out_2965479824870416273[8] = 0;
   out_2965479824870416273[9] = 0;
   out_2965479824870416273[10] = 0;
   out_2965479824870416273[11] = 0;
   out_2965479824870416273[12] = 0;
   out_2965479824870416273[13] = 0;
   out_2965479824870416273[14] = 0;
   out_2965479824870416273[15] = 0;
   out_2965479824870416273[16] = 0;
   out_2965479824870416273[17] = 0;
   out_2965479824870416273[18] = 0;
   out_2965479824870416273[19] = 0;
   out_2965479824870416273[20] = 0;
   out_2965479824870416273[21] = 0;
   out_2965479824870416273[22] = 0;
   out_2965479824870416273[23] = 0;
   out_2965479824870416273[24] = 0;
   out_2965479824870416273[25] = 0;
   out_2965479824870416273[26] = 1;
   out_2965479824870416273[27] = 0;
   out_2965479824870416273[28] = 0;
   out_2965479824870416273[29] = 0;
   out_2965479824870416273[30] = 0;
   out_2965479824870416273[31] = 0;
   out_2965479824870416273[32] = 0;
   out_2965479824870416273[33] = 0;
   out_2965479824870416273[34] = 0;
   out_2965479824870416273[35] = 0;
   out_2965479824870416273[36] = 0;
   out_2965479824870416273[37] = 0;
   out_2965479824870416273[38] = 0;
   out_2965479824870416273[39] = 0;
   out_2965479824870416273[40] = 0;
   out_2965479824870416273[41] = 0;
   out_2965479824870416273[42] = 0;
   out_2965479824870416273[43] = 0;
   out_2965479824870416273[44] = 0;
   out_2965479824870416273[45] = 0;
   out_2965479824870416273[46] = 0;
   out_2965479824870416273[47] = 0;
   out_2965479824870416273[48] = 0;
   out_2965479824870416273[49] = 1;
   out_2965479824870416273[50] = 0;
   out_2965479824870416273[51] = 0;
   out_2965479824870416273[52] = 0;
   out_2965479824870416273[53] = 0;
   out_2965479824870416273[54] = 0;
   out_2965479824870416273[55] = 0;
   out_2965479824870416273[56] = 0;
   out_2965479824870416273[57] = 0;
   out_2965479824870416273[58] = 0;
   out_2965479824870416273[59] = 0;
   out_2965479824870416273[60] = 0;
   out_2965479824870416273[61] = 0;
   out_2965479824870416273[62] = 0;
   out_2965479824870416273[63] = 0;
   out_2965479824870416273[64] = 0;
   out_2965479824870416273[65] = 0;
   out_2965479824870416273[66] = 0;
   out_2965479824870416273[67] = 0;
   out_2965479824870416273[68] = 0;
   out_2965479824870416273[69] = 0;
   out_2965479824870416273[70] = 0;
   out_2965479824870416273[71] = 0;
   out_2965479824870416273[72] = 1;
   out_2965479824870416273[73] = 0;
   out_2965479824870416273[74] = 0;
   out_2965479824870416273[75] = 0;
   out_2965479824870416273[76] = 0;
   out_2965479824870416273[77] = 0;
   out_2965479824870416273[78] = 0;
   out_2965479824870416273[79] = 0;
   out_2965479824870416273[80] = 0;
   out_2965479824870416273[81] = 0;
   out_2965479824870416273[82] = 0;
   out_2965479824870416273[83] = 0;
   out_2965479824870416273[84] = 0;
   out_2965479824870416273[85] = 0;
   out_2965479824870416273[86] = 0;
   out_2965479824870416273[87] = 0;
}
void h_13(double *state, double *unused, double *out_7800067890510650184) {
   out_7800067890510650184[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7800067890510650184[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7800067890510650184[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4915980534915030171) {
   out_4915980534915030171[0] = 0;
   out_4915980534915030171[1] = 0;
   out_4915980534915030171[2] = 0;
   out_4915980534915030171[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4915980534915030171[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4915980534915030171[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4915980534915030171[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4915980534915030171[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4915980534915030171[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4915980534915030171[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4915980534915030171[10] = 0;
   out_4915980534915030171[11] = 0;
   out_4915980534915030171[12] = 0;
   out_4915980534915030171[13] = 0;
   out_4915980534915030171[14] = 0;
   out_4915980534915030171[15] = 0;
   out_4915980534915030171[16] = 0;
   out_4915980534915030171[17] = 0;
   out_4915980534915030171[18] = 0;
   out_4915980534915030171[19] = 0;
   out_4915980534915030171[20] = 0;
   out_4915980534915030171[21] = 0;
   out_4915980534915030171[22] = 0;
   out_4915980534915030171[23] = 0;
   out_4915980534915030171[24] = 0;
   out_4915980534915030171[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4915980534915030171[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4915980534915030171[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4915980534915030171[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4915980534915030171[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4915980534915030171[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4915980534915030171[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4915980534915030171[32] = 0;
   out_4915980534915030171[33] = 0;
   out_4915980534915030171[34] = 0;
   out_4915980534915030171[35] = 0;
   out_4915980534915030171[36] = 0;
   out_4915980534915030171[37] = 0;
   out_4915980534915030171[38] = 0;
   out_4915980534915030171[39] = 0;
   out_4915980534915030171[40] = 0;
   out_4915980534915030171[41] = 0;
   out_4915980534915030171[42] = 0;
   out_4915980534915030171[43] = 0;
   out_4915980534915030171[44] = 0;
   out_4915980534915030171[45] = 0;
   out_4915980534915030171[46] = 0;
   out_4915980534915030171[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4915980534915030171[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4915980534915030171[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4915980534915030171[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4915980534915030171[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4915980534915030171[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4915980534915030171[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4915980534915030171[54] = 0;
   out_4915980534915030171[55] = 0;
   out_4915980534915030171[56] = 0;
   out_4915980534915030171[57] = 0;
   out_4915980534915030171[58] = 0;
   out_4915980534915030171[59] = 0;
   out_4915980534915030171[60] = 0;
   out_4915980534915030171[61] = 0;
   out_4915980534915030171[62] = 0;
   out_4915980534915030171[63] = 0;
   out_4915980534915030171[64] = 0;
   out_4915980534915030171[65] = 0;
}
void h_14(double *state, double *unused, double *out_1917081015155043783) {
   out_1917081015155043783[0] = state[10];
   out_1917081015155043783[1] = state[11];
   out_1917081015155043783[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6754871917821515898) {
   out_6754871917821515898[0] = 0;
   out_6754871917821515898[1] = 0;
   out_6754871917821515898[2] = 0;
   out_6754871917821515898[3] = 0;
   out_6754871917821515898[4] = 0;
   out_6754871917821515898[5] = 0;
   out_6754871917821515898[6] = 0;
   out_6754871917821515898[7] = 0;
   out_6754871917821515898[8] = 0;
   out_6754871917821515898[9] = 0;
   out_6754871917821515898[10] = 1;
   out_6754871917821515898[11] = 0;
   out_6754871917821515898[12] = 0;
   out_6754871917821515898[13] = 0;
   out_6754871917821515898[14] = 0;
   out_6754871917821515898[15] = 0;
   out_6754871917821515898[16] = 0;
   out_6754871917821515898[17] = 0;
   out_6754871917821515898[18] = 0;
   out_6754871917821515898[19] = 0;
   out_6754871917821515898[20] = 0;
   out_6754871917821515898[21] = 0;
   out_6754871917821515898[22] = 0;
   out_6754871917821515898[23] = 0;
   out_6754871917821515898[24] = 0;
   out_6754871917821515898[25] = 0;
   out_6754871917821515898[26] = 0;
   out_6754871917821515898[27] = 0;
   out_6754871917821515898[28] = 0;
   out_6754871917821515898[29] = 0;
   out_6754871917821515898[30] = 0;
   out_6754871917821515898[31] = 0;
   out_6754871917821515898[32] = 0;
   out_6754871917821515898[33] = 1;
   out_6754871917821515898[34] = 0;
   out_6754871917821515898[35] = 0;
   out_6754871917821515898[36] = 0;
   out_6754871917821515898[37] = 0;
   out_6754871917821515898[38] = 0;
   out_6754871917821515898[39] = 0;
   out_6754871917821515898[40] = 0;
   out_6754871917821515898[41] = 0;
   out_6754871917821515898[42] = 0;
   out_6754871917821515898[43] = 0;
   out_6754871917821515898[44] = 0;
   out_6754871917821515898[45] = 0;
   out_6754871917821515898[46] = 0;
   out_6754871917821515898[47] = 0;
   out_6754871917821515898[48] = 0;
   out_6754871917821515898[49] = 0;
   out_6754871917821515898[50] = 0;
   out_6754871917821515898[51] = 0;
   out_6754871917821515898[52] = 0;
   out_6754871917821515898[53] = 0;
   out_6754871917821515898[54] = 0;
   out_6754871917821515898[55] = 0;
   out_6754871917821515898[56] = 1;
   out_6754871917821515898[57] = 0;
   out_6754871917821515898[58] = 0;
   out_6754871917821515898[59] = 0;
   out_6754871917821515898[60] = 0;
   out_6754871917821515898[61] = 0;
   out_6754871917821515898[62] = 0;
   out_6754871917821515898[63] = 0;
   out_6754871917821515898[64] = 0;
   out_6754871917821515898[65] = 0;
}
void h_33(double *state, double *unused, double *out_5524091102416707340) {
   out_5524091102416707340[0] = state[16];
   out_5524091102416707340[1] = state[17];
   out_5524091102416707340[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5415842740506161383) {
   out_5415842740506161383[0] = 0;
   out_5415842740506161383[1] = 0;
   out_5415842740506161383[2] = 0;
   out_5415842740506161383[3] = 0;
   out_5415842740506161383[4] = 0;
   out_5415842740506161383[5] = 0;
   out_5415842740506161383[6] = 0;
   out_5415842740506161383[7] = 0;
   out_5415842740506161383[8] = 0;
   out_5415842740506161383[9] = 0;
   out_5415842740506161383[10] = 0;
   out_5415842740506161383[11] = 0;
   out_5415842740506161383[12] = 0;
   out_5415842740506161383[13] = 0;
   out_5415842740506161383[14] = 0;
   out_5415842740506161383[15] = 0;
   out_5415842740506161383[16] = 1;
   out_5415842740506161383[17] = 0;
   out_5415842740506161383[18] = 0;
   out_5415842740506161383[19] = 0;
   out_5415842740506161383[20] = 0;
   out_5415842740506161383[21] = 0;
   out_5415842740506161383[22] = 0;
   out_5415842740506161383[23] = 0;
   out_5415842740506161383[24] = 0;
   out_5415842740506161383[25] = 0;
   out_5415842740506161383[26] = 0;
   out_5415842740506161383[27] = 0;
   out_5415842740506161383[28] = 0;
   out_5415842740506161383[29] = 0;
   out_5415842740506161383[30] = 0;
   out_5415842740506161383[31] = 0;
   out_5415842740506161383[32] = 0;
   out_5415842740506161383[33] = 0;
   out_5415842740506161383[34] = 0;
   out_5415842740506161383[35] = 0;
   out_5415842740506161383[36] = 0;
   out_5415842740506161383[37] = 0;
   out_5415842740506161383[38] = 0;
   out_5415842740506161383[39] = 1;
   out_5415842740506161383[40] = 0;
   out_5415842740506161383[41] = 0;
   out_5415842740506161383[42] = 0;
   out_5415842740506161383[43] = 0;
   out_5415842740506161383[44] = 0;
   out_5415842740506161383[45] = 0;
   out_5415842740506161383[46] = 0;
   out_5415842740506161383[47] = 0;
   out_5415842740506161383[48] = 0;
   out_5415842740506161383[49] = 0;
   out_5415842740506161383[50] = 0;
   out_5415842740506161383[51] = 0;
   out_5415842740506161383[52] = 0;
   out_5415842740506161383[53] = 0;
   out_5415842740506161383[54] = 0;
   out_5415842740506161383[55] = 0;
   out_5415842740506161383[56] = 0;
   out_5415842740506161383[57] = 0;
   out_5415842740506161383[58] = 0;
   out_5415842740506161383[59] = 0;
   out_5415842740506161383[60] = 0;
   out_5415842740506161383[61] = 0;
   out_5415842740506161383[62] = 1;
   out_5415842740506161383[63] = 0;
   out_5415842740506161383[64] = 0;
   out_5415842740506161383[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8673519326481956153) {
  H(in_vec, out_8673519326481956153);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6509520593120827794) {
  err_fun(nom_x, delta_x, out_6509520593120827794);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1854403484088584618) {
  inv_err_fun(nom_x, true_x, out_1854403484088584618);
}
void live_H_mod_fun(double *state, double *out_2341655123536354807) {
  H_mod_fun(state, out_2341655123536354807);
}
void live_f_fun(double *state, double dt, double *out_9130093515614849635) {
  f_fun(state,  dt, out_9130093515614849635);
}
void live_F_fun(double *state, double dt, double *out_1465107715934980664) {
  F_fun(state,  dt, out_1465107715934980664);
}
void live_h_4(double *state, double *unused, double *out_5550033602791381692) {
  h_4(state, unused, out_5550033602791381692);
}
void live_H_4(double *state, double *unused, double *out_6513682271191925253) {
  H_4(state, unused, out_6513682271191925253);
}
void live_h_9(double *state, double *unused, double *out_1917081015155043783) {
  h_9(state, unused, out_1917081015155043783);
}
void live_H_9(double *state, double *unused, double *out_6754871917821515898) {
  H_9(state, unused, out_6754871917821515898);
}
void live_h_10(double *state, double *unused, double *out_6306219088906799002) {
  h_10(state, unused, out_6306219088906799002);
}
void live_H_10(double *state, double *unused, double *out_6227195161888097549) {
  H_10(state, unused, out_6227195161888097549);
}
void live_h_12(double *state, double *unused, double *out_2284330100859273191) {
  h_12(state, unused, out_2284330100859273191);
}
void live_H_12(double *state, double *unused, double *out_6913605394485664568) {
  H_12(state, unused, out_6913605394485664568);
}
void live_h_31(double *state, double *unused, double *out_1719538927514605940) {
  h_31(state, unused, out_1719538927514605940);
}
void live_H_31(double *state, double *unused, double *out_8566399745145018987) {
  H_31(state, unused, out_8566399745145018987);
}
void live_h_32(double *state, double *unused, double *out_4339813958746689082) {
  h_32(state, unused, out_4339813958746689082);
}
void live_H_32(double *state, double *unused, double *out_2965479824870416273) {
  H_32(state, unused, out_2965479824870416273);
}
void live_h_13(double *state, double *unused, double *out_7800067890510650184) {
  h_13(state, unused, out_7800067890510650184);
}
void live_H_13(double *state, double *unused, double *out_4915980534915030171) {
  H_13(state, unused, out_4915980534915030171);
}
void live_h_14(double *state, double *unused, double *out_1917081015155043783) {
  h_14(state, unused, out_1917081015155043783);
}
void live_H_14(double *state, double *unused, double *out_6754871917821515898) {
  H_14(state, unused, out_6754871917821515898);
}
void live_h_33(double *state, double *unused, double *out_5524091102416707340) {
  h_33(state, unused, out_5524091102416707340);
}
void live_H_33(double *state, double *unused, double *out_5415842740506161383) {
  H_33(state, unused, out_5415842740506161383);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
