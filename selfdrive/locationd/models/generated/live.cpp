#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_9094854505137700114) {
   out_9094854505137700114[0] = 0;
   out_9094854505137700114[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_9094854505137700114[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_9094854505137700114[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_9094854505137700114[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_9094854505137700114[5] = -sin(in_vec[1]);
   out_9094854505137700114[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9094854505137700114[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9094854505137700114[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_9094854505137700114[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_9094854505137700114[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_9094854505137700114[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_9094854505137700114[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9094854505137700114[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9094854505137700114[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_9094854505137700114[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_9094854505137700114[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_9094854505137700114[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7189592963740075634) {
   out_7189592963740075634[0] = delta_x[0] + nom_x[0];
   out_7189592963740075634[1] = delta_x[1] + nom_x[1];
   out_7189592963740075634[2] = delta_x[2] + nom_x[2];
   out_7189592963740075634[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7189592963740075634[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7189592963740075634[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7189592963740075634[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7189592963740075634[7] = delta_x[6] + nom_x[7];
   out_7189592963740075634[8] = delta_x[7] + nom_x[8];
   out_7189592963740075634[9] = delta_x[8] + nom_x[9];
   out_7189592963740075634[10] = delta_x[9] + nom_x[10];
   out_7189592963740075634[11] = delta_x[10] + nom_x[11];
   out_7189592963740075634[12] = delta_x[11] + nom_x[12];
   out_7189592963740075634[13] = delta_x[12] + nom_x[13];
   out_7189592963740075634[14] = delta_x[13] + nom_x[14];
   out_7189592963740075634[15] = delta_x[14] + nom_x[15];
   out_7189592963740075634[16] = delta_x[15] + nom_x[16];
   out_7189592963740075634[17] = delta_x[16] + nom_x[17];
   out_7189592963740075634[18] = delta_x[17] + nom_x[18];
   out_7189592963740075634[19] = delta_x[18] + nom_x[19];
   out_7189592963740075634[20] = delta_x[19] + nom_x[20];
   out_7189592963740075634[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7508967909468565488) {
   out_7508967909468565488[0] = -nom_x[0] + true_x[0];
   out_7508967909468565488[1] = -nom_x[1] + true_x[1];
   out_7508967909468565488[2] = -nom_x[2] + true_x[2];
   out_7508967909468565488[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7508967909468565488[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7508967909468565488[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7508967909468565488[6] = -nom_x[7] + true_x[7];
   out_7508967909468565488[7] = -nom_x[8] + true_x[8];
   out_7508967909468565488[8] = -nom_x[9] + true_x[9];
   out_7508967909468565488[9] = -nom_x[10] + true_x[10];
   out_7508967909468565488[10] = -nom_x[11] + true_x[11];
   out_7508967909468565488[11] = -nom_x[12] + true_x[12];
   out_7508967909468565488[12] = -nom_x[13] + true_x[13];
   out_7508967909468565488[13] = -nom_x[14] + true_x[14];
   out_7508967909468565488[14] = -nom_x[15] + true_x[15];
   out_7508967909468565488[15] = -nom_x[16] + true_x[16];
   out_7508967909468565488[16] = -nom_x[17] + true_x[17];
   out_7508967909468565488[17] = -nom_x[18] + true_x[18];
   out_7508967909468565488[18] = -nom_x[19] + true_x[19];
   out_7508967909468565488[19] = -nom_x[20] + true_x[20];
   out_7508967909468565488[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6406871339729092844) {
   out_6406871339729092844[0] = 1.0;
   out_6406871339729092844[1] = 0;
   out_6406871339729092844[2] = 0;
   out_6406871339729092844[3] = 0;
   out_6406871339729092844[4] = 0;
   out_6406871339729092844[5] = 0;
   out_6406871339729092844[6] = 0;
   out_6406871339729092844[7] = 0;
   out_6406871339729092844[8] = 0;
   out_6406871339729092844[9] = 0;
   out_6406871339729092844[10] = 0;
   out_6406871339729092844[11] = 0;
   out_6406871339729092844[12] = 0;
   out_6406871339729092844[13] = 0;
   out_6406871339729092844[14] = 0;
   out_6406871339729092844[15] = 0;
   out_6406871339729092844[16] = 0;
   out_6406871339729092844[17] = 0;
   out_6406871339729092844[18] = 0;
   out_6406871339729092844[19] = 0;
   out_6406871339729092844[20] = 0;
   out_6406871339729092844[21] = 0;
   out_6406871339729092844[22] = 1.0;
   out_6406871339729092844[23] = 0;
   out_6406871339729092844[24] = 0;
   out_6406871339729092844[25] = 0;
   out_6406871339729092844[26] = 0;
   out_6406871339729092844[27] = 0;
   out_6406871339729092844[28] = 0;
   out_6406871339729092844[29] = 0;
   out_6406871339729092844[30] = 0;
   out_6406871339729092844[31] = 0;
   out_6406871339729092844[32] = 0;
   out_6406871339729092844[33] = 0;
   out_6406871339729092844[34] = 0;
   out_6406871339729092844[35] = 0;
   out_6406871339729092844[36] = 0;
   out_6406871339729092844[37] = 0;
   out_6406871339729092844[38] = 0;
   out_6406871339729092844[39] = 0;
   out_6406871339729092844[40] = 0;
   out_6406871339729092844[41] = 0;
   out_6406871339729092844[42] = 0;
   out_6406871339729092844[43] = 0;
   out_6406871339729092844[44] = 1.0;
   out_6406871339729092844[45] = 0;
   out_6406871339729092844[46] = 0;
   out_6406871339729092844[47] = 0;
   out_6406871339729092844[48] = 0;
   out_6406871339729092844[49] = 0;
   out_6406871339729092844[50] = 0;
   out_6406871339729092844[51] = 0;
   out_6406871339729092844[52] = 0;
   out_6406871339729092844[53] = 0;
   out_6406871339729092844[54] = 0;
   out_6406871339729092844[55] = 0;
   out_6406871339729092844[56] = 0;
   out_6406871339729092844[57] = 0;
   out_6406871339729092844[58] = 0;
   out_6406871339729092844[59] = 0;
   out_6406871339729092844[60] = 0;
   out_6406871339729092844[61] = 0;
   out_6406871339729092844[62] = 0;
   out_6406871339729092844[63] = 0;
   out_6406871339729092844[64] = 0;
   out_6406871339729092844[65] = 0;
   out_6406871339729092844[66] = -0.5*state[4];
   out_6406871339729092844[67] = -0.5*state[5];
   out_6406871339729092844[68] = -0.5*state[6];
   out_6406871339729092844[69] = 0;
   out_6406871339729092844[70] = 0;
   out_6406871339729092844[71] = 0;
   out_6406871339729092844[72] = 0;
   out_6406871339729092844[73] = 0;
   out_6406871339729092844[74] = 0;
   out_6406871339729092844[75] = 0;
   out_6406871339729092844[76] = 0;
   out_6406871339729092844[77] = 0;
   out_6406871339729092844[78] = 0;
   out_6406871339729092844[79] = 0;
   out_6406871339729092844[80] = 0;
   out_6406871339729092844[81] = 0;
   out_6406871339729092844[82] = 0;
   out_6406871339729092844[83] = 0;
   out_6406871339729092844[84] = 0;
   out_6406871339729092844[85] = 0;
   out_6406871339729092844[86] = 0;
   out_6406871339729092844[87] = 0.5*state[3];
   out_6406871339729092844[88] = 0.5*state[6];
   out_6406871339729092844[89] = -0.5*state[5];
   out_6406871339729092844[90] = 0;
   out_6406871339729092844[91] = 0;
   out_6406871339729092844[92] = 0;
   out_6406871339729092844[93] = 0;
   out_6406871339729092844[94] = 0;
   out_6406871339729092844[95] = 0;
   out_6406871339729092844[96] = 0;
   out_6406871339729092844[97] = 0;
   out_6406871339729092844[98] = 0;
   out_6406871339729092844[99] = 0;
   out_6406871339729092844[100] = 0;
   out_6406871339729092844[101] = 0;
   out_6406871339729092844[102] = 0;
   out_6406871339729092844[103] = 0;
   out_6406871339729092844[104] = 0;
   out_6406871339729092844[105] = 0;
   out_6406871339729092844[106] = 0;
   out_6406871339729092844[107] = 0;
   out_6406871339729092844[108] = -0.5*state[6];
   out_6406871339729092844[109] = 0.5*state[3];
   out_6406871339729092844[110] = 0.5*state[4];
   out_6406871339729092844[111] = 0;
   out_6406871339729092844[112] = 0;
   out_6406871339729092844[113] = 0;
   out_6406871339729092844[114] = 0;
   out_6406871339729092844[115] = 0;
   out_6406871339729092844[116] = 0;
   out_6406871339729092844[117] = 0;
   out_6406871339729092844[118] = 0;
   out_6406871339729092844[119] = 0;
   out_6406871339729092844[120] = 0;
   out_6406871339729092844[121] = 0;
   out_6406871339729092844[122] = 0;
   out_6406871339729092844[123] = 0;
   out_6406871339729092844[124] = 0;
   out_6406871339729092844[125] = 0;
   out_6406871339729092844[126] = 0;
   out_6406871339729092844[127] = 0;
   out_6406871339729092844[128] = 0;
   out_6406871339729092844[129] = 0.5*state[5];
   out_6406871339729092844[130] = -0.5*state[4];
   out_6406871339729092844[131] = 0.5*state[3];
   out_6406871339729092844[132] = 0;
   out_6406871339729092844[133] = 0;
   out_6406871339729092844[134] = 0;
   out_6406871339729092844[135] = 0;
   out_6406871339729092844[136] = 0;
   out_6406871339729092844[137] = 0;
   out_6406871339729092844[138] = 0;
   out_6406871339729092844[139] = 0;
   out_6406871339729092844[140] = 0;
   out_6406871339729092844[141] = 0;
   out_6406871339729092844[142] = 0;
   out_6406871339729092844[143] = 0;
   out_6406871339729092844[144] = 0;
   out_6406871339729092844[145] = 0;
   out_6406871339729092844[146] = 0;
   out_6406871339729092844[147] = 0;
   out_6406871339729092844[148] = 0;
   out_6406871339729092844[149] = 0;
   out_6406871339729092844[150] = 0;
   out_6406871339729092844[151] = 0;
   out_6406871339729092844[152] = 0;
   out_6406871339729092844[153] = 1.0;
   out_6406871339729092844[154] = 0;
   out_6406871339729092844[155] = 0;
   out_6406871339729092844[156] = 0;
   out_6406871339729092844[157] = 0;
   out_6406871339729092844[158] = 0;
   out_6406871339729092844[159] = 0;
   out_6406871339729092844[160] = 0;
   out_6406871339729092844[161] = 0;
   out_6406871339729092844[162] = 0;
   out_6406871339729092844[163] = 0;
   out_6406871339729092844[164] = 0;
   out_6406871339729092844[165] = 0;
   out_6406871339729092844[166] = 0;
   out_6406871339729092844[167] = 0;
   out_6406871339729092844[168] = 0;
   out_6406871339729092844[169] = 0;
   out_6406871339729092844[170] = 0;
   out_6406871339729092844[171] = 0;
   out_6406871339729092844[172] = 0;
   out_6406871339729092844[173] = 0;
   out_6406871339729092844[174] = 0;
   out_6406871339729092844[175] = 1.0;
   out_6406871339729092844[176] = 0;
   out_6406871339729092844[177] = 0;
   out_6406871339729092844[178] = 0;
   out_6406871339729092844[179] = 0;
   out_6406871339729092844[180] = 0;
   out_6406871339729092844[181] = 0;
   out_6406871339729092844[182] = 0;
   out_6406871339729092844[183] = 0;
   out_6406871339729092844[184] = 0;
   out_6406871339729092844[185] = 0;
   out_6406871339729092844[186] = 0;
   out_6406871339729092844[187] = 0;
   out_6406871339729092844[188] = 0;
   out_6406871339729092844[189] = 0;
   out_6406871339729092844[190] = 0;
   out_6406871339729092844[191] = 0;
   out_6406871339729092844[192] = 0;
   out_6406871339729092844[193] = 0;
   out_6406871339729092844[194] = 0;
   out_6406871339729092844[195] = 0;
   out_6406871339729092844[196] = 0;
   out_6406871339729092844[197] = 1.0;
   out_6406871339729092844[198] = 0;
   out_6406871339729092844[199] = 0;
   out_6406871339729092844[200] = 0;
   out_6406871339729092844[201] = 0;
   out_6406871339729092844[202] = 0;
   out_6406871339729092844[203] = 0;
   out_6406871339729092844[204] = 0;
   out_6406871339729092844[205] = 0;
   out_6406871339729092844[206] = 0;
   out_6406871339729092844[207] = 0;
   out_6406871339729092844[208] = 0;
   out_6406871339729092844[209] = 0;
   out_6406871339729092844[210] = 0;
   out_6406871339729092844[211] = 0;
   out_6406871339729092844[212] = 0;
   out_6406871339729092844[213] = 0;
   out_6406871339729092844[214] = 0;
   out_6406871339729092844[215] = 0;
   out_6406871339729092844[216] = 0;
   out_6406871339729092844[217] = 0;
   out_6406871339729092844[218] = 0;
   out_6406871339729092844[219] = 1.0;
   out_6406871339729092844[220] = 0;
   out_6406871339729092844[221] = 0;
   out_6406871339729092844[222] = 0;
   out_6406871339729092844[223] = 0;
   out_6406871339729092844[224] = 0;
   out_6406871339729092844[225] = 0;
   out_6406871339729092844[226] = 0;
   out_6406871339729092844[227] = 0;
   out_6406871339729092844[228] = 0;
   out_6406871339729092844[229] = 0;
   out_6406871339729092844[230] = 0;
   out_6406871339729092844[231] = 0;
   out_6406871339729092844[232] = 0;
   out_6406871339729092844[233] = 0;
   out_6406871339729092844[234] = 0;
   out_6406871339729092844[235] = 0;
   out_6406871339729092844[236] = 0;
   out_6406871339729092844[237] = 0;
   out_6406871339729092844[238] = 0;
   out_6406871339729092844[239] = 0;
   out_6406871339729092844[240] = 0;
   out_6406871339729092844[241] = 1.0;
   out_6406871339729092844[242] = 0;
   out_6406871339729092844[243] = 0;
   out_6406871339729092844[244] = 0;
   out_6406871339729092844[245] = 0;
   out_6406871339729092844[246] = 0;
   out_6406871339729092844[247] = 0;
   out_6406871339729092844[248] = 0;
   out_6406871339729092844[249] = 0;
   out_6406871339729092844[250] = 0;
   out_6406871339729092844[251] = 0;
   out_6406871339729092844[252] = 0;
   out_6406871339729092844[253] = 0;
   out_6406871339729092844[254] = 0;
   out_6406871339729092844[255] = 0;
   out_6406871339729092844[256] = 0;
   out_6406871339729092844[257] = 0;
   out_6406871339729092844[258] = 0;
   out_6406871339729092844[259] = 0;
   out_6406871339729092844[260] = 0;
   out_6406871339729092844[261] = 0;
   out_6406871339729092844[262] = 0;
   out_6406871339729092844[263] = 1.0;
   out_6406871339729092844[264] = 0;
   out_6406871339729092844[265] = 0;
   out_6406871339729092844[266] = 0;
   out_6406871339729092844[267] = 0;
   out_6406871339729092844[268] = 0;
   out_6406871339729092844[269] = 0;
   out_6406871339729092844[270] = 0;
   out_6406871339729092844[271] = 0;
   out_6406871339729092844[272] = 0;
   out_6406871339729092844[273] = 0;
   out_6406871339729092844[274] = 0;
   out_6406871339729092844[275] = 0;
   out_6406871339729092844[276] = 0;
   out_6406871339729092844[277] = 0;
   out_6406871339729092844[278] = 0;
   out_6406871339729092844[279] = 0;
   out_6406871339729092844[280] = 0;
   out_6406871339729092844[281] = 0;
   out_6406871339729092844[282] = 0;
   out_6406871339729092844[283] = 0;
   out_6406871339729092844[284] = 0;
   out_6406871339729092844[285] = 1.0;
   out_6406871339729092844[286] = 0;
   out_6406871339729092844[287] = 0;
   out_6406871339729092844[288] = 0;
   out_6406871339729092844[289] = 0;
   out_6406871339729092844[290] = 0;
   out_6406871339729092844[291] = 0;
   out_6406871339729092844[292] = 0;
   out_6406871339729092844[293] = 0;
   out_6406871339729092844[294] = 0;
   out_6406871339729092844[295] = 0;
   out_6406871339729092844[296] = 0;
   out_6406871339729092844[297] = 0;
   out_6406871339729092844[298] = 0;
   out_6406871339729092844[299] = 0;
   out_6406871339729092844[300] = 0;
   out_6406871339729092844[301] = 0;
   out_6406871339729092844[302] = 0;
   out_6406871339729092844[303] = 0;
   out_6406871339729092844[304] = 0;
   out_6406871339729092844[305] = 0;
   out_6406871339729092844[306] = 0;
   out_6406871339729092844[307] = 1.0;
   out_6406871339729092844[308] = 0;
   out_6406871339729092844[309] = 0;
   out_6406871339729092844[310] = 0;
   out_6406871339729092844[311] = 0;
   out_6406871339729092844[312] = 0;
   out_6406871339729092844[313] = 0;
   out_6406871339729092844[314] = 0;
   out_6406871339729092844[315] = 0;
   out_6406871339729092844[316] = 0;
   out_6406871339729092844[317] = 0;
   out_6406871339729092844[318] = 0;
   out_6406871339729092844[319] = 0;
   out_6406871339729092844[320] = 0;
   out_6406871339729092844[321] = 0;
   out_6406871339729092844[322] = 0;
   out_6406871339729092844[323] = 0;
   out_6406871339729092844[324] = 0;
   out_6406871339729092844[325] = 0;
   out_6406871339729092844[326] = 0;
   out_6406871339729092844[327] = 0;
   out_6406871339729092844[328] = 0;
   out_6406871339729092844[329] = 1.0;
   out_6406871339729092844[330] = 0;
   out_6406871339729092844[331] = 0;
   out_6406871339729092844[332] = 0;
   out_6406871339729092844[333] = 0;
   out_6406871339729092844[334] = 0;
   out_6406871339729092844[335] = 0;
   out_6406871339729092844[336] = 0;
   out_6406871339729092844[337] = 0;
   out_6406871339729092844[338] = 0;
   out_6406871339729092844[339] = 0;
   out_6406871339729092844[340] = 0;
   out_6406871339729092844[341] = 0;
   out_6406871339729092844[342] = 0;
   out_6406871339729092844[343] = 0;
   out_6406871339729092844[344] = 0;
   out_6406871339729092844[345] = 0;
   out_6406871339729092844[346] = 0;
   out_6406871339729092844[347] = 0;
   out_6406871339729092844[348] = 0;
   out_6406871339729092844[349] = 0;
   out_6406871339729092844[350] = 0;
   out_6406871339729092844[351] = 1.0;
   out_6406871339729092844[352] = 0;
   out_6406871339729092844[353] = 0;
   out_6406871339729092844[354] = 0;
   out_6406871339729092844[355] = 0;
   out_6406871339729092844[356] = 0;
   out_6406871339729092844[357] = 0;
   out_6406871339729092844[358] = 0;
   out_6406871339729092844[359] = 0;
   out_6406871339729092844[360] = 0;
   out_6406871339729092844[361] = 0;
   out_6406871339729092844[362] = 0;
   out_6406871339729092844[363] = 0;
   out_6406871339729092844[364] = 0;
   out_6406871339729092844[365] = 0;
   out_6406871339729092844[366] = 0;
   out_6406871339729092844[367] = 0;
   out_6406871339729092844[368] = 0;
   out_6406871339729092844[369] = 0;
   out_6406871339729092844[370] = 0;
   out_6406871339729092844[371] = 0;
   out_6406871339729092844[372] = 0;
   out_6406871339729092844[373] = 1.0;
   out_6406871339729092844[374] = 0;
   out_6406871339729092844[375] = 0;
   out_6406871339729092844[376] = 0;
   out_6406871339729092844[377] = 0;
   out_6406871339729092844[378] = 0;
   out_6406871339729092844[379] = 0;
   out_6406871339729092844[380] = 0;
   out_6406871339729092844[381] = 0;
   out_6406871339729092844[382] = 0;
   out_6406871339729092844[383] = 0;
   out_6406871339729092844[384] = 0;
   out_6406871339729092844[385] = 0;
   out_6406871339729092844[386] = 0;
   out_6406871339729092844[387] = 0;
   out_6406871339729092844[388] = 0;
   out_6406871339729092844[389] = 0;
   out_6406871339729092844[390] = 0;
   out_6406871339729092844[391] = 0;
   out_6406871339729092844[392] = 0;
   out_6406871339729092844[393] = 0;
   out_6406871339729092844[394] = 0;
   out_6406871339729092844[395] = 1.0;
   out_6406871339729092844[396] = 0;
   out_6406871339729092844[397] = 0;
   out_6406871339729092844[398] = 0;
   out_6406871339729092844[399] = 0;
   out_6406871339729092844[400] = 0;
   out_6406871339729092844[401] = 0;
   out_6406871339729092844[402] = 0;
   out_6406871339729092844[403] = 0;
   out_6406871339729092844[404] = 0;
   out_6406871339729092844[405] = 0;
   out_6406871339729092844[406] = 0;
   out_6406871339729092844[407] = 0;
   out_6406871339729092844[408] = 0;
   out_6406871339729092844[409] = 0;
   out_6406871339729092844[410] = 0;
   out_6406871339729092844[411] = 0;
   out_6406871339729092844[412] = 0;
   out_6406871339729092844[413] = 0;
   out_6406871339729092844[414] = 0;
   out_6406871339729092844[415] = 0;
   out_6406871339729092844[416] = 0;
   out_6406871339729092844[417] = 1.0;
   out_6406871339729092844[418] = 0;
   out_6406871339729092844[419] = 0;
   out_6406871339729092844[420] = 0;
   out_6406871339729092844[421] = 0;
   out_6406871339729092844[422] = 0;
   out_6406871339729092844[423] = 0;
   out_6406871339729092844[424] = 0;
   out_6406871339729092844[425] = 0;
   out_6406871339729092844[426] = 0;
   out_6406871339729092844[427] = 0;
   out_6406871339729092844[428] = 0;
   out_6406871339729092844[429] = 0;
   out_6406871339729092844[430] = 0;
   out_6406871339729092844[431] = 0;
   out_6406871339729092844[432] = 0;
   out_6406871339729092844[433] = 0;
   out_6406871339729092844[434] = 0;
   out_6406871339729092844[435] = 0;
   out_6406871339729092844[436] = 0;
   out_6406871339729092844[437] = 0;
   out_6406871339729092844[438] = 0;
   out_6406871339729092844[439] = 1.0;
   out_6406871339729092844[440] = 0;
   out_6406871339729092844[441] = 0;
   out_6406871339729092844[442] = 0;
   out_6406871339729092844[443] = 0;
   out_6406871339729092844[444] = 0;
   out_6406871339729092844[445] = 0;
   out_6406871339729092844[446] = 0;
   out_6406871339729092844[447] = 0;
   out_6406871339729092844[448] = 0;
   out_6406871339729092844[449] = 0;
   out_6406871339729092844[450] = 0;
   out_6406871339729092844[451] = 0;
   out_6406871339729092844[452] = 0;
   out_6406871339729092844[453] = 0;
   out_6406871339729092844[454] = 0;
   out_6406871339729092844[455] = 0;
   out_6406871339729092844[456] = 0;
   out_6406871339729092844[457] = 0;
   out_6406871339729092844[458] = 0;
   out_6406871339729092844[459] = 0;
   out_6406871339729092844[460] = 0;
   out_6406871339729092844[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8326757184263707931) {
   out_8326757184263707931[0] = dt*state[7] + state[0];
   out_8326757184263707931[1] = dt*state[8] + state[1];
   out_8326757184263707931[2] = dt*state[9] + state[2];
   out_8326757184263707931[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8326757184263707931[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8326757184263707931[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8326757184263707931[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8326757184263707931[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8326757184263707931[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8326757184263707931[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8326757184263707931[10] = state[10];
   out_8326757184263707931[11] = state[11];
   out_8326757184263707931[12] = state[12];
   out_8326757184263707931[13] = state[13];
   out_8326757184263707931[14] = state[14];
   out_8326757184263707931[15] = state[15];
   out_8326757184263707931[16] = state[16];
   out_8326757184263707931[17] = state[17];
   out_8326757184263707931[18] = state[18];
   out_8326757184263707931[19] = state[19];
   out_8326757184263707931[20] = state[20];
   out_8326757184263707931[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6845140873145997354) {
   out_6845140873145997354[0] = 1;
   out_6845140873145997354[1] = 0;
   out_6845140873145997354[2] = 0;
   out_6845140873145997354[3] = 0;
   out_6845140873145997354[4] = 0;
   out_6845140873145997354[5] = 0;
   out_6845140873145997354[6] = dt;
   out_6845140873145997354[7] = 0;
   out_6845140873145997354[8] = 0;
   out_6845140873145997354[9] = 0;
   out_6845140873145997354[10] = 0;
   out_6845140873145997354[11] = 0;
   out_6845140873145997354[12] = 0;
   out_6845140873145997354[13] = 0;
   out_6845140873145997354[14] = 0;
   out_6845140873145997354[15] = 0;
   out_6845140873145997354[16] = 0;
   out_6845140873145997354[17] = 0;
   out_6845140873145997354[18] = 0;
   out_6845140873145997354[19] = 0;
   out_6845140873145997354[20] = 0;
   out_6845140873145997354[21] = 0;
   out_6845140873145997354[22] = 1;
   out_6845140873145997354[23] = 0;
   out_6845140873145997354[24] = 0;
   out_6845140873145997354[25] = 0;
   out_6845140873145997354[26] = 0;
   out_6845140873145997354[27] = 0;
   out_6845140873145997354[28] = dt;
   out_6845140873145997354[29] = 0;
   out_6845140873145997354[30] = 0;
   out_6845140873145997354[31] = 0;
   out_6845140873145997354[32] = 0;
   out_6845140873145997354[33] = 0;
   out_6845140873145997354[34] = 0;
   out_6845140873145997354[35] = 0;
   out_6845140873145997354[36] = 0;
   out_6845140873145997354[37] = 0;
   out_6845140873145997354[38] = 0;
   out_6845140873145997354[39] = 0;
   out_6845140873145997354[40] = 0;
   out_6845140873145997354[41] = 0;
   out_6845140873145997354[42] = 0;
   out_6845140873145997354[43] = 0;
   out_6845140873145997354[44] = 1;
   out_6845140873145997354[45] = 0;
   out_6845140873145997354[46] = 0;
   out_6845140873145997354[47] = 0;
   out_6845140873145997354[48] = 0;
   out_6845140873145997354[49] = 0;
   out_6845140873145997354[50] = dt;
   out_6845140873145997354[51] = 0;
   out_6845140873145997354[52] = 0;
   out_6845140873145997354[53] = 0;
   out_6845140873145997354[54] = 0;
   out_6845140873145997354[55] = 0;
   out_6845140873145997354[56] = 0;
   out_6845140873145997354[57] = 0;
   out_6845140873145997354[58] = 0;
   out_6845140873145997354[59] = 0;
   out_6845140873145997354[60] = 0;
   out_6845140873145997354[61] = 0;
   out_6845140873145997354[62] = 0;
   out_6845140873145997354[63] = 0;
   out_6845140873145997354[64] = 0;
   out_6845140873145997354[65] = 0;
   out_6845140873145997354[66] = 1;
   out_6845140873145997354[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6845140873145997354[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6845140873145997354[69] = 0;
   out_6845140873145997354[70] = 0;
   out_6845140873145997354[71] = 0;
   out_6845140873145997354[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6845140873145997354[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6845140873145997354[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6845140873145997354[75] = 0;
   out_6845140873145997354[76] = 0;
   out_6845140873145997354[77] = 0;
   out_6845140873145997354[78] = 0;
   out_6845140873145997354[79] = 0;
   out_6845140873145997354[80] = 0;
   out_6845140873145997354[81] = 0;
   out_6845140873145997354[82] = 0;
   out_6845140873145997354[83] = 0;
   out_6845140873145997354[84] = 0;
   out_6845140873145997354[85] = 0;
   out_6845140873145997354[86] = 0;
   out_6845140873145997354[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6845140873145997354[88] = 1;
   out_6845140873145997354[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6845140873145997354[90] = 0;
   out_6845140873145997354[91] = 0;
   out_6845140873145997354[92] = 0;
   out_6845140873145997354[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6845140873145997354[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6845140873145997354[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6845140873145997354[96] = 0;
   out_6845140873145997354[97] = 0;
   out_6845140873145997354[98] = 0;
   out_6845140873145997354[99] = 0;
   out_6845140873145997354[100] = 0;
   out_6845140873145997354[101] = 0;
   out_6845140873145997354[102] = 0;
   out_6845140873145997354[103] = 0;
   out_6845140873145997354[104] = 0;
   out_6845140873145997354[105] = 0;
   out_6845140873145997354[106] = 0;
   out_6845140873145997354[107] = 0;
   out_6845140873145997354[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6845140873145997354[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6845140873145997354[110] = 1;
   out_6845140873145997354[111] = 0;
   out_6845140873145997354[112] = 0;
   out_6845140873145997354[113] = 0;
   out_6845140873145997354[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6845140873145997354[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6845140873145997354[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6845140873145997354[117] = 0;
   out_6845140873145997354[118] = 0;
   out_6845140873145997354[119] = 0;
   out_6845140873145997354[120] = 0;
   out_6845140873145997354[121] = 0;
   out_6845140873145997354[122] = 0;
   out_6845140873145997354[123] = 0;
   out_6845140873145997354[124] = 0;
   out_6845140873145997354[125] = 0;
   out_6845140873145997354[126] = 0;
   out_6845140873145997354[127] = 0;
   out_6845140873145997354[128] = 0;
   out_6845140873145997354[129] = 0;
   out_6845140873145997354[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6845140873145997354[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6845140873145997354[132] = 1;
   out_6845140873145997354[133] = 0;
   out_6845140873145997354[134] = 0;
   out_6845140873145997354[135] = 0;
   out_6845140873145997354[136] = 0;
   out_6845140873145997354[137] = 0;
   out_6845140873145997354[138] = 0;
   out_6845140873145997354[139] = 0;
   out_6845140873145997354[140] = 0;
   out_6845140873145997354[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6845140873145997354[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6845140873145997354[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6845140873145997354[144] = 0;
   out_6845140873145997354[145] = 0;
   out_6845140873145997354[146] = 0;
   out_6845140873145997354[147] = 0;
   out_6845140873145997354[148] = 0;
   out_6845140873145997354[149] = 0;
   out_6845140873145997354[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6845140873145997354[151] = 0;
   out_6845140873145997354[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6845140873145997354[153] = 0;
   out_6845140873145997354[154] = 1;
   out_6845140873145997354[155] = 0;
   out_6845140873145997354[156] = 0;
   out_6845140873145997354[157] = 0;
   out_6845140873145997354[158] = 0;
   out_6845140873145997354[159] = 0;
   out_6845140873145997354[160] = 0;
   out_6845140873145997354[161] = 0;
   out_6845140873145997354[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6845140873145997354[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6845140873145997354[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6845140873145997354[165] = 0;
   out_6845140873145997354[166] = 0;
   out_6845140873145997354[167] = 0;
   out_6845140873145997354[168] = 0;
   out_6845140873145997354[169] = 0;
   out_6845140873145997354[170] = 0;
   out_6845140873145997354[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6845140873145997354[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6845140873145997354[173] = 0;
   out_6845140873145997354[174] = 0;
   out_6845140873145997354[175] = 0;
   out_6845140873145997354[176] = 1;
   out_6845140873145997354[177] = 0;
   out_6845140873145997354[178] = 0;
   out_6845140873145997354[179] = 0;
   out_6845140873145997354[180] = 0;
   out_6845140873145997354[181] = 0;
   out_6845140873145997354[182] = 0;
   out_6845140873145997354[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6845140873145997354[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6845140873145997354[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6845140873145997354[186] = 0;
   out_6845140873145997354[187] = 0;
   out_6845140873145997354[188] = 0;
   out_6845140873145997354[189] = 0;
   out_6845140873145997354[190] = 0;
   out_6845140873145997354[191] = 0;
   out_6845140873145997354[192] = 0;
   out_6845140873145997354[193] = 0;
   out_6845140873145997354[194] = 0;
   out_6845140873145997354[195] = 0;
   out_6845140873145997354[196] = 0;
   out_6845140873145997354[197] = 0;
   out_6845140873145997354[198] = 1;
   out_6845140873145997354[199] = 0;
   out_6845140873145997354[200] = 0;
   out_6845140873145997354[201] = 0;
   out_6845140873145997354[202] = 0;
   out_6845140873145997354[203] = 0;
   out_6845140873145997354[204] = 0;
   out_6845140873145997354[205] = 0;
   out_6845140873145997354[206] = 0;
   out_6845140873145997354[207] = 0;
   out_6845140873145997354[208] = 0;
   out_6845140873145997354[209] = 0;
   out_6845140873145997354[210] = 0;
   out_6845140873145997354[211] = 0;
   out_6845140873145997354[212] = 0;
   out_6845140873145997354[213] = 0;
   out_6845140873145997354[214] = 0;
   out_6845140873145997354[215] = 0;
   out_6845140873145997354[216] = 0;
   out_6845140873145997354[217] = 0;
   out_6845140873145997354[218] = 0;
   out_6845140873145997354[219] = 0;
   out_6845140873145997354[220] = 1;
   out_6845140873145997354[221] = 0;
   out_6845140873145997354[222] = 0;
   out_6845140873145997354[223] = 0;
   out_6845140873145997354[224] = 0;
   out_6845140873145997354[225] = 0;
   out_6845140873145997354[226] = 0;
   out_6845140873145997354[227] = 0;
   out_6845140873145997354[228] = 0;
   out_6845140873145997354[229] = 0;
   out_6845140873145997354[230] = 0;
   out_6845140873145997354[231] = 0;
   out_6845140873145997354[232] = 0;
   out_6845140873145997354[233] = 0;
   out_6845140873145997354[234] = 0;
   out_6845140873145997354[235] = 0;
   out_6845140873145997354[236] = 0;
   out_6845140873145997354[237] = 0;
   out_6845140873145997354[238] = 0;
   out_6845140873145997354[239] = 0;
   out_6845140873145997354[240] = 0;
   out_6845140873145997354[241] = 0;
   out_6845140873145997354[242] = 1;
   out_6845140873145997354[243] = 0;
   out_6845140873145997354[244] = 0;
   out_6845140873145997354[245] = 0;
   out_6845140873145997354[246] = 0;
   out_6845140873145997354[247] = 0;
   out_6845140873145997354[248] = 0;
   out_6845140873145997354[249] = 0;
   out_6845140873145997354[250] = 0;
   out_6845140873145997354[251] = 0;
   out_6845140873145997354[252] = 0;
   out_6845140873145997354[253] = 0;
   out_6845140873145997354[254] = 0;
   out_6845140873145997354[255] = 0;
   out_6845140873145997354[256] = 0;
   out_6845140873145997354[257] = 0;
   out_6845140873145997354[258] = 0;
   out_6845140873145997354[259] = 0;
   out_6845140873145997354[260] = 0;
   out_6845140873145997354[261] = 0;
   out_6845140873145997354[262] = 0;
   out_6845140873145997354[263] = 0;
   out_6845140873145997354[264] = 1;
   out_6845140873145997354[265] = 0;
   out_6845140873145997354[266] = 0;
   out_6845140873145997354[267] = 0;
   out_6845140873145997354[268] = 0;
   out_6845140873145997354[269] = 0;
   out_6845140873145997354[270] = 0;
   out_6845140873145997354[271] = 0;
   out_6845140873145997354[272] = 0;
   out_6845140873145997354[273] = 0;
   out_6845140873145997354[274] = 0;
   out_6845140873145997354[275] = 0;
   out_6845140873145997354[276] = 0;
   out_6845140873145997354[277] = 0;
   out_6845140873145997354[278] = 0;
   out_6845140873145997354[279] = 0;
   out_6845140873145997354[280] = 0;
   out_6845140873145997354[281] = 0;
   out_6845140873145997354[282] = 0;
   out_6845140873145997354[283] = 0;
   out_6845140873145997354[284] = 0;
   out_6845140873145997354[285] = 0;
   out_6845140873145997354[286] = 1;
   out_6845140873145997354[287] = 0;
   out_6845140873145997354[288] = 0;
   out_6845140873145997354[289] = 0;
   out_6845140873145997354[290] = 0;
   out_6845140873145997354[291] = 0;
   out_6845140873145997354[292] = 0;
   out_6845140873145997354[293] = 0;
   out_6845140873145997354[294] = 0;
   out_6845140873145997354[295] = 0;
   out_6845140873145997354[296] = 0;
   out_6845140873145997354[297] = 0;
   out_6845140873145997354[298] = 0;
   out_6845140873145997354[299] = 0;
   out_6845140873145997354[300] = 0;
   out_6845140873145997354[301] = 0;
   out_6845140873145997354[302] = 0;
   out_6845140873145997354[303] = 0;
   out_6845140873145997354[304] = 0;
   out_6845140873145997354[305] = 0;
   out_6845140873145997354[306] = 0;
   out_6845140873145997354[307] = 0;
   out_6845140873145997354[308] = 1;
   out_6845140873145997354[309] = 0;
   out_6845140873145997354[310] = 0;
   out_6845140873145997354[311] = 0;
   out_6845140873145997354[312] = 0;
   out_6845140873145997354[313] = 0;
   out_6845140873145997354[314] = 0;
   out_6845140873145997354[315] = 0;
   out_6845140873145997354[316] = 0;
   out_6845140873145997354[317] = 0;
   out_6845140873145997354[318] = 0;
   out_6845140873145997354[319] = 0;
   out_6845140873145997354[320] = 0;
   out_6845140873145997354[321] = 0;
   out_6845140873145997354[322] = 0;
   out_6845140873145997354[323] = 0;
   out_6845140873145997354[324] = 0;
   out_6845140873145997354[325] = 0;
   out_6845140873145997354[326] = 0;
   out_6845140873145997354[327] = 0;
   out_6845140873145997354[328] = 0;
   out_6845140873145997354[329] = 0;
   out_6845140873145997354[330] = 1;
   out_6845140873145997354[331] = 0;
   out_6845140873145997354[332] = 0;
   out_6845140873145997354[333] = 0;
   out_6845140873145997354[334] = 0;
   out_6845140873145997354[335] = 0;
   out_6845140873145997354[336] = 0;
   out_6845140873145997354[337] = 0;
   out_6845140873145997354[338] = 0;
   out_6845140873145997354[339] = 0;
   out_6845140873145997354[340] = 0;
   out_6845140873145997354[341] = 0;
   out_6845140873145997354[342] = 0;
   out_6845140873145997354[343] = 0;
   out_6845140873145997354[344] = 0;
   out_6845140873145997354[345] = 0;
   out_6845140873145997354[346] = 0;
   out_6845140873145997354[347] = 0;
   out_6845140873145997354[348] = 0;
   out_6845140873145997354[349] = 0;
   out_6845140873145997354[350] = 0;
   out_6845140873145997354[351] = 0;
   out_6845140873145997354[352] = 1;
   out_6845140873145997354[353] = 0;
   out_6845140873145997354[354] = 0;
   out_6845140873145997354[355] = 0;
   out_6845140873145997354[356] = 0;
   out_6845140873145997354[357] = 0;
   out_6845140873145997354[358] = 0;
   out_6845140873145997354[359] = 0;
   out_6845140873145997354[360] = 0;
   out_6845140873145997354[361] = 0;
   out_6845140873145997354[362] = 0;
   out_6845140873145997354[363] = 0;
   out_6845140873145997354[364] = 0;
   out_6845140873145997354[365] = 0;
   out_6845140873145997354[366] = 0;
   out_6845140873145997354[367] = 0;
   out_6845140873145997354[368] = 0;
   out_6845140873145997354[369] = 0;
   out_6845140873145997354[370] = 0;
   out_6845140873145997354[371] = 0;
   out_6845140873145997354[372] = 0;
   out_6845140873145997354[373] = 0;
   out_6845140873145997354[374] = 1;
   out_6845140873145997354[375] = 0;
   out_6845140873145997354[376] = 0;
   out_6845140873145997354[377] = 0;
   out_6845140873145997354[378] = 0;
   out_6845140873145997354[379] = 0;
   out_6845140873145997354[380] = 0;
   out_6845140873145997354[381] = 0;
   out_6845140873145997354[382] = 0;
   out_6845140873145997354[383] = 0;
   out_6845140873145997354[384] = 0;
   out_6845140873145997354[385] = 0;
   out_6845140873145997354[386] = 0;
   out_6845140873145997354[387] = 0;
   out_6845140873145997354[388] = 0;
   out_6845140873145997354[389] = 0;
   out_6845140873145997354[390] = 0;
   out_6845140873145997354[391] = 0;
   out_6845140873145997354[392] = 0;
   out_6845140873145997354[393] = 0;
   out_6845140873145997354[394] = 0;
   out_6845140873145997354[395] = 0;
   out_6845140873145997354[396] = 1;
   out_6845140873145997354[397] = 0;
   out_6845140873145997354[398] = 0;
   out_6845140873145997354[399] = 0;
   out_6845140873145997354[400] = 0;
   out_6845140873145997354[401] = 0;
   out_6845140873145997354[402] = 0;
   out_6845140873145997354[403] = 0;
   out_6845140873145997354[404] = 0;
   out_6845140873145997354[405] = 0;
   out_6845140873145997354[406] = 0;
   out_6845140873145997354[407] = 0;
   out_6845140873145997354[408] = 0;
   out_6845140873145997354[409] = 0;
   out_6845140873145997354[410] = 0;
   out_6845140873145997354[411] = 0;
   out_6845140873145997354[412] = 0;
   out_6845140873145997354[413] = 0;
   out_6845140873145997354[414] = 0;
   out_6845140873145997354[415] = 0;
   out_6845140873145997354[416] = 0;
   out_6845140873145997354[417] = 0;
   out_6845140873145997354[418] = 1;
   out_6845140873145997354[419] = 0;
   out_6845140873145997354[420] = 0;
   out_6845140873145997354[421] = 0;
   out_6845140873145997354[422] = 0;
   out_6845140873145997354[423] = 0;
   out_6845140873145997354[424] = 0;
   out_6845140873145997354[425] = 0;
   out_6845140873145997354[426] = 0;
   out_6845140873145997354[427] = 0;
   out_6845140873145997354[428] = 0;
   out_6845140873145997354[429] = 0;
   out_6845140873145997354[430] = 0;
   out_6845140873145997354[431] = 0;
   out_6845140873145997354[432] = 0;
   out_6845140873145997354[433] = 0;
   out_6845140873145997354[434] = 0;
   out_6845140873145997354[435] = 0;
   out_6845140873145997354[436] = 0;
   out_6845140873145997354[437] = 0;
   out_6845140873145997354[438] = 0;
   out_6845140873145997354[439] = 0;
   out_6845140873145997354[440] = 1;
}
void h_4(double *state, double *unused, double *out_1404230682439242376) {
   out_1404230682439242376[0] = state[10] + state[13];
   out_1404230682439242376[1] = state[11] + state[14];
   out_1404230682439242376[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1958599729245028118) {
   out_1958599729245028118[0] = 0;
   out_1958599729245028118[1] = 0;
   out_1958599729245028118[2] = 0;
   out_1958599729245028118[3] = 0;
   out_1958599729245028118[4] = 0;
   out_1958599729245028118[5] = 0;
   out_1958599729245028118[6] = 0;
   out_1958599729245028118[7] = 0;
   out_1958599729245028118[8] = 0;
   out_1958599729245028118[9] = 0;
   out_1958599729245028118[10] = 1;
   out_1958599729245028118[11] = 0;
   out_1958599729245028118[12] = 0;
   out_1958599729245028118[13] = 1;
   out_1958599729245028118[14] = 0;
   out_1958599729245028118[15] = 0;
   out_1958599729245028118[16] = 0;
   out_1958599729245028118[17] = 0;
   out_1958599729245028118[18] = 0;
   out_1958599729245028118[19] = 0;
   out_1958599729245028118[20] = 0;
   out_1958599729245028118[21] = 0;
   out_1958599729245028118[22] = 0;
   out_1958599729245028118[23] = 0;
   out_1958599729245028118[24] = 0;
   out_1958599729245028118[25] = 0;
   out_1958599729245028118[26] = 0;
   out_1958599729245028118[27] = 0;
   out_1958599729245028118[28] = 0;
   out_1958599729245028118[29] = 0;
   out_1958599729245028118[30] = 0;
   out_1958599729245028118[31] = 0;
   out_1958599729245028118[32] = 0;
   out_1958599729245028118[33] = 1;
   out_1958599729245028118[34] = 0;
   out_1958599729245028118[35] = 0;
   out_1958599729245028118[36] = 1;
   out_1958599729245028118[37] = 0;
   out_1958599729245028118[38] = 0;
   out_1958599729245028118[39] = 0;
   out_1958599729245028118[40] = 0;
   out_1958599729245028118[41] = 0;
   out_1958599729245028118[42] = 0;
   out_1958599729245028118[43] = 0;
   out_1958599729245028118[44] = 0;
   out_1958599729245028118[45] = 0;
   out_1958599729245028118[46] = 0;
   out_1958599729245028118[47] = 0;
   out_1958599729245028118[48] = 0;
   out_1958599729245028118[49] = 0;
   out_1958599729245028118[50] = 0;
   out_1958599729245028118[51] = 0;
   out_1958599729245028118[52] = 0;
   out_1958599729245028118[53] = 0;
   out_1958599729245028118[54] = 0;
   out_1958599729245028118[55] = 0;
   out_1958599729245028118[56] = 1;
   out_1958599729245028118[57] = 0;
   out_1958599729245028118[58] = 0;
   out_1958599729245028118[59] = 1;
   out_1958599729245028118[60] = 0;
   out_1958599729245028118[61] = 0;
   out_1958599729245028118[62] = 0;
   out_1958599729245028118[63] = 0;
   out_1958599729245028118[64] = 0;
   out_1958599729245028118[65] = 0;
}
void h_9(double *state, double *unused, double *out_4901740455674426920) {
   out_4901740455674426920[0] = state[10];
   out_4901740455674426920[1] = state[11];
   out_4901740455674426920[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2198568007109749365) {
   out_2198568007109749365[0] = 0;
   out_2198568007109749365[1] = 0;
   out_2198568007109749365[2] = 0;
   out_2198568007109749365[3] = 0;
   out_2198568007109749365[4] = 0;
   out_2198568007109749365[5] = 0;
   out_2198568007109749365[6] = 0;
   out_2198568007109749365[7] = 0;
   out_2198568007109749365[8] = 0;
   out_2198568007109749365[9] = 0;
   out_2198568007109749365[10] = 1;
   out_2198568007109749365[11] = 0;
   out_2198568007109749365[12] = 0;
   out_2198568007109749365[13] = 0;
   out_2198568007109749365[14] = 0;
   out_2198568007109749365[15] = 0;
   out_2198568007109749365[16] = 0;
   out_2198568007109749365[17] = 0;
   out_2198568007109749365[18] = 0;
   out_2198568007109749365[19] = 0;
   out_2198568007109749365[20] = 0;
   out_2198568007109749365[21] = 0;
   out_2198568007109749365[22] = 0;
   out_2198568007109749365[23] = 0;
   out_2198568007109749365[24] = 0;
   out_2198568007109749365[25] = 0;
   out_2198568007109749365[26] = 0;
   out_2198568007109749365[27] = 0;
   out_2198568007109749365[28] = 0;
   out_2198568007109749365[29] = 0;
   out_2198568007109749365[30] = 0;
   out_2198568007109749365[31] = 0;
   out_2198568007109749365[32] = 0;
   out_2198568007109749365[33] = 1;
   out_2198568007109749365[34] = 0;
   out_2198568007109749365[35] = 0;
   out_2198568007109749365[36] = 0;
   out_2198568007109749365[37] = 0;
   out_2198568007109749365[38] = 0;
   out_2198568007109749365[39] = 0;
   out_2198568007109749365[40] = 0;
   out_2198568007109749365[41] = 0;
   out_2198568007109749365[42] = 0;
   out_2198568007109749365[43] = 0;
   out_2198568007109749365[44] = 0;
   out_2198568007109749365[45] = 0;
   out_2198568007109749365[46] = 0;
   out_2198568007109749365[47] = 0;
   out_2198568007109749365[48] = 0;
   out_2198568007109749365[49] = 0;
   out_2198568007109749365[50] = 0;
   out_2198568007109749365[51] = 0;
   out_2198568007109749365[52] = 0;
   out_2198568007109749365[53] = 0;
   out_2198568007109749365[54] = 0;
   out_2198568007109749365[55] = 0;
   out_2198568007109749365[56] = 1;
   out_2198568007109749365[57] = 0;
   out_2198568007109749365[58] = 0;
   out_2198568007109749365[59] = 0;
   out_2198568007109749365[60] = 0;
   out_2198568007109749365[61] = 0;
   out_2198568007109749365[62] = 0;
   out_2198568007109749365[63] = 0;
   out_2198568007109749365[64] = 0;
   out_2198568007109749365[65] = 0;
}
void h_10(double *state, double *unused, double *out_2989697102392970489) {
   out_2989697102392970489[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2989697102392970489[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2989697102392970489[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1394276942919263448) {
   out_1394276942919263448[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1394276942919263448[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1394276942919263448[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1394276942919263448[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1394276942919263448[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1394276942919263448[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1394276942919263448[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1394276942919263448[7] = 0;
   out_1394276942919263448[8] = 0;
   out_1394276942919263448[9] = 0;
   out_1394276942919263448[10] = 0;
   out_1394276942919263448[11] = 0;
   out_1394276942919263448[12] = 0;
   out_1394276942919263448[13] = 0;
   out_1394276942919263448[14] = 0;
   out_1394276942919263448[15] = 0;
   out_1394276942919263448[16] = 1;
   out_1394276942919263448[17] = 0;
   out_1394276942919263448[18] = 0;
   out_1394276942919263448[19] = 1;
   out_1394276942919263448[20] = 0;
   out_1394276942919263448[21] = 0;
   out_1394276942919263448[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1394276942919263448[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1394276942919263448[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1394276942919263448[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1394276942919263448[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1394276942919263448[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1394276942919263448[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1394276942919263448[29] = 0;
   out_1394276942919263448[30] = 0;
   out_1394276942919263448[31] = 0;
   out_1394276942919263448[32] = 0;
   out_1394276942919263448[33] = 0;
   out_1394276942919263448[34] = 0;
   out_1394276942919263448[35] = 0;
   out_1394276942919263448[36] = 0;
   out_1394276942919263448[37] = 0;
   out_1394276942919263448[38] = 0;
   out_1394276942919263448[39] = 1;
   out_1394276942919263448[40] = 0;
   out_1394276942919263448[41] = 0;
   out_1394276942919263448[42] = 1;
   out_1394276942919263448[43] = 0;
   out_1394276942919263448[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1394276942919263448[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1394276942919263448[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1394276942919263448[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1394276942919263448[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1394276942919263448[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1394276942919263448[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1394276942919263448[51] = 0;
   out_1394276942919263448[52] = 0;
   out_1394276942919263448[53] = 0;
   out_1394276942919263448[54] = 0;
   out_1394276942919263448[55] = 0;
   out_1394276942919263448[56] = 0;
   out_1394276942919263448[57] = 0;
   out_1394276942919263448[58] = 0;
   out_1394276942919263448[59] = 0;
   out_1394276942919263448[60] = 0;
   out_1394276942919263448[61] = 0;
   out_1394276942919263448[62] = 1;
   out_1394276942919263448[63] = 0;
   out_1394276942919263448[64] = 0;
   out_1394276942919263448[65] = 1;
}
void h_12(double *state, double *unused, double *out_7092051119784227734) {
   out_7092051119784227734[0] = state[0];
   out_7092051119784227734[1] = state[1];
   out_7092051119784227734[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2579698754292621785) {
   out_2579698754292621785[0] = 1;
   out_2579698754292621785[1] = 0;
   out_2579698754292621785[2] = 0;
   out_2579698754292621785[3] = 0;
   out_2579698754292621785[4] = 0;
   out_2579698754292621785[5] = 0;
   out_2579698754292621785[6] = 0;
   out_2579698754292621785[7] = 0;
   out_2579698754292621785[8] = 0;
   out_2579698754292621785[9] = 0;
   out_2579698754292621785[10] = 0;
   out_2579698754292621785[11] = 0;
   out_2579698754292621785[12] = 0;
   out_2579698754292621785[13] = 0;
   out_2579698754292621785[14] = 0;
   out_2579698754292621785[15] = 0;
   out_2579698754292621785[16] = 0;
   out_2579698754292621785[17] = 0;
   out_2579698754292621785[18] = 0;
   out_2579698754292621785[19] = 0;
   out_2579698754292621785[20] = 0;
   out_2579698754292621785[21] = 0;
   out_2579698754292621785[22] = 0;
   out_2579698754292621785[23] = 1;
   out_2579698754292621785[24] = 0;
   out_2579698754292621785[25] = 0;
   out_2579698754292621785[26] = 0;
   out_2579698754292621785[27] = 0;
   out_2579698754292621785[28] = 0;
   out_2579698754292621785[29] = 0;
   out_2579698754292621785[30] = 0;
   out_2579698754292621785[31] = 0;
   out_2579698754292621785[32] = 0;
   out_2579698754292621785[33] = 0;
   out_2579698754292621785[34] = 0;
   out_2579698754292621785[35] = 0;
   out_2579698754292621785[36] = 0;
   out_2579698754292621785[37] = 0;
   out_2579698754292621785[38] = 0;
   out_2579698754292621785[39] = 0;
   out_2579698754292621785[40] = 0;
   out_2579698754292621785[41] = 0;
   out_2579698754292621785[42] = 0;
   out_2579698754292621785[43] = 0;
   out_2579698754292621785[44] = 0;
   out_2579698754292621785[45] = 0;
   out_2579698754292621785[46] = 1;
   out_2579698754292621785[47] = 0;
   out_2579698754292621785[48] = 0;
   out_2579698754292621785[49] = 0;
   out_2579698754292621785[50] = 0;
   out_2579698754292621785[51] = 0;
   out_2579698754292621785[52] = 0;
   out_2579698754292621785[53] = 0;
   out_2579698754292621785[54] = 0;
   out_2579698754292621785[55] = 0;
   out_2579698754292621785[56] = 0;
   out_2579698754292621785[57] = 0;
   out_2579698754292621785[58] = 0;
   out_2579698754292621785[59] = 0;
   out_2579698754292621785[60] = 0;
   out_2579698754292621785[61] = 0;
   out_2579698754292621785[62] = 0;
   out_2579698754292621785[63] = 0;
   out_2579698754292621785[64] = 0;
   out_2579698754292621785[65] = 0;
}
void h_31(double *state, double *unused, double *out_5309002211289508523) {
   out_5309002211289508523[0] = state[7];
   out_5309002211289508523[1] = state[8];
   out_5309002211289508523[2] = state[9];
}
void H_31(double *state, double *unused, double *out_5325261786617635494) {
   out_5325261786617635494[0] = 0;
   out_5325261786617635494[1] = 0;
   out_5325261786617635494[2] = 0;
   out_5325261786617635494[3] = 0;
   out_5325261786617635494[4] = 0;
   out_5325261786617635494[5] = 0;
   out_5325261786617635494[6] = 0;
   out_5325261786617635494[7] = 1;
   out_5325261786617635494[8] = 0;
   out_5325261786617635494[9] = 0;
   out_5325261786617635494[10] = 0;
   out_5325261786617635494[11] = 0;
   out_5325261786617635494[12] = 0;
   out_5325261786617635494[13] = 0;
   out_5325261786617635494[14] = 0;
   out_5325261786617635494[15] = 0;
   out_5325261786617635494[16] = 0;
   out_5325261786617635494[17] = 0;
   out_5325261786617635494[18] = 0;
   out_5325261786617635494[19] = 0;
   out_5325261786617635494[20] = 0;
   out_5325261786617635494[21] = 0;
   out_5325261786617635494[22] = 0;
   out_5325261786617635494[23] = 0;
   out_5325261786617635494[24] = 0;
   out_5325261786617635494[25] = 0;
   out_5325261786617635494[26] = 0;
   out_5325261786617635494[27] = 0;
   out_5325261786617635494[28] = 0;
   out_5325261786617635494[29] = 0;
   out_5325261786617635494[30] = 1;
   out_5325261786617635494[31] = 0;
   out_5325261786617635494[32] = 0;
   out_5325261786617635494[33] = 0;
   out_5325261786617635494[34] = 0;
   out_5325261786617635494[35] = 0;
   out_5325261786617635494[36] = 0;
   out_5325261786617635494[37] = 0;
   out_5325261786617635494[38] = 0;
   out_5325261786617635494[39] = 0;
   out_5325261786617635494[40] = 0;
   out_5325261786617635494[41] = 0;
   out_5325261786617635494[42] = 0;
   out_5325261786617635494[43] = 0;
   out_5325261786617635494[44] = 0;
   out_5325261786617635494[45] = 0;
   out_5325261786617635494[46] = 0;
   out_5325261786617635494[47] = 0;
   out_5325261786617635494[48] = 0;
   out_5325261786617635494[49] = 0;
   out_5325261786617635494[50] = 0;
   out_5325261786617635494[51] = 0;
   out_5325261786617635494[52] = 0;
   out_5325261786617635494[53] = 1;
   out_5325261786617635494[54] = 0;
   out_5325261786617635494[55] = 0;
   out_5325261786617635494[56] = 0;
   out_5325261786617635494[57] = 0;
   out_5325261786617635494[58] = 0;
   out_5325261786617635494[59] = 0;
   out_5325261786617635494[60] = 0;
   out_5325261786617635494[61] = 0;
   out_5325261786617635494[62] = 0;
   out_5325261786617635494[63] = 0;
   out_5325261786617635494[64] = 0;
   out_5325261786617635494[65] = 0;
}
void h_32(double *state, double *unused, double *out_2904342480900863083) {
   out_2904342480900863083[0] = state[3];
   out_2904342480900863083[1] = state[4];
   out_2904342480900863083[2] = state[5];
   out_2904342480900863083[3] = state[6];
}
void H_32(double *state, double *unused, double *out_984257010884528606) {
   out_984257010884528606[0] = 0;
   out_984257010884528606[1] = 0;
   out_984257010884528606[2] = 0;
   out_984257010884528606[3] = 1;
   out_984257010884528606[4] = 0;
   out_984257010884528606[5] = 0;
   out_984257010884528606[6] = 0;
   out_984257010884528606[7] = 0;
   out_984257010884528606[8] = 0;
   out_984257010884528606[9] = 0;
   out_984257010884528606[10] = 0;
   out_984257010884528606[11] = 0;
   out_984257010884528606[12] = 0;
   out_984257010884528606[13] = 0;
   out_984257010884528606[14] = 0;
   out_984257010884528606[15] = 0;
   out_984257010884528606[16] = 0;
   out_984257010884528606[17] = 0;
   out_984257010884528606[18] = 0;
   out_984257010884528606[19] = 0;
   out_984257010884528606[20] = 0;
   out_984257010884528606[21] = 0;
   out_984257010884528606[22] = 0;
   out_984257010884528606[23] = 0;
   out_984257010884528606[24] = 0;
   out_984257010884528606[25] = 0;
   out_984257010884528606[26] = 1;
   out_984257010884528606[27] = 0;
   out_984257010884528606[28] = 0;
   out_984257010884528606[29] = 0;
   out_984257010884528606[30] = 0;
   out_984257010884528606[31] = 0;
   out_984257010884528606[32] = 0;
   out_984257010884528606[33] = 0;
   out_984257010884528606[34] = 0;
   out_984257010884528606[35] = 0;
   out_984257010884528606[36] = 0;
   out_984257010884528606[37] = 0;
   out_984257010884528606[38] = 0;
   out_984257010884528606[39] = 0;
   out_984257010884528606[40] = 0;
   out_984257010884528606[41] = 0;
   out_984257010884528606[42] = 0;
   out_984257010884528606[43] = 0;
   out_984257010884528606[44] = 0;
   out_984257010884528606[45] = 0;
   out_984257010884528606[46] = 0;
   out_984257010884528606[47] = 0;
   out_984257010884528606[48] = 0;
   out_984257010884528606[49] = 1;
   out_984257010884528606[50] = 0;
   out_984257010884528606[51] = 0;
   out_984257010884528606[52] = 0;
   out_984257010884528606[53] = 0;
   out_984257010884528606[54] = 0;
   out_984257010884528606[55] = 0;
   out_984257010884528606[56] = 0;
   out_984257010884528606[57] = 0;
   out_984257010884528606[58] = 0;
   out_984257010884528606[59] = 0;
   out_984257010884528606[60] = 0;
   out_984257010884528606[61] = 0;
   out_984257010884528606[62] = 0;
   out_984257010884528606[63] = 0;
   out_984257010884528606[64] = 0;
   out_984257010884528606[65] = 0;
   out_984257010884528606[66] = 0;
   out_984257010884528606[67] = 0;
   out_984257010884528606[68] = 0;
   out_984257010884528606[69] = 0;
   out_984257010884528606[70] = 0;
   out_984257010884528606[71] = 0;
   out_984257010884528606[72] = 1;
   out_984257010884528606[73] = 0;
   out_984257010884528606[74] = 0;
   out_984257010884528606[75] = 0;
   out_984257010884528606[76] = 0;
   out_984257010884528606[77] = 0;
   out_984257010884528606[78] = 0;
   out_984257010884528606[79] = 0;
   out_984257010884528606[80] = 0;
   out_984257010884528606[81] = 0;
   out_984257010884528606[82] = 0;
   out_984257010884528606[83] = 0;
   out_984257010884528606[84] = 0;
   out_984257010884528606[85] = 0;
   out_984257010884528606[86] = 0;
   out_984257010884528606[87] = 0;
}
void h_13(double *state, double *unused, double *out_4995199596212226186) {
   out_4995199596212226186[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4995199596212226186[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4995199596212226186[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_206491193835808968) {
   out_206491193835808968[0] = 0;
   out_206491193835808968[1] = 0;
   out_206491193835808968[2] = 0;
   out_206491193835808968[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_206491193835808968[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_206491193835808968[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_206491193835808968[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_206491193835808968[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_206491193835808968[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_206491193835808968[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_206491193835808968[10] = 0;
   out_206491193835808968[11] = 0;
   out_206491193835808968[12] = 0;
   out_206491193835808968[13] = 0;
   out_206491193835808968[14] = 0;
   out_206491193835808968[15] = 0;
   out_206491193835808968[16] = 0;
   out_206491193835808968[17] = 0;
   out_206491193835808968[18] = 0;
   out_206491193835808968[19] = 0;
   out_206491193835808968[20] = 0;
   out_206491193835808968[21] = 0;
   out_206491193835808968[22] = 0;
   out_206491193835808968[23] = 0;
   out_206491193835808968[24] = 0;
   out_206491193835808968[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_206491193835808968[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_206491193835808968[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_206491193835808968[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_206491193835808968[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_206491193835808968[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_206491193835808968[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_206491193835808968[32] = 0;
   out_206491193835808968[33] = 0;
   out_206491193835808968[34] = 0;
   out_206491193835808968[35] = 0;
   out_206491193835808968[36] = 0;
   out_206491193835808968[37] = 0;
   out_206491193835808968[38] = 0;
   out_206491193835808968[39] = 0;
   out_206491193835808968[40] = 0;
   out_206491193835808968[41] = 0;
   out_206491193835808968[42] = 0;
   out_206491193835808968[43] = 0;
   out_206491193835808968[44] = 0;
   out_206491193835808968[45] = 0;
   out_206491193835808968[46] = 0;
   out_206491193835808968[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_206491193835808968[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_206491193835808968[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_206491193835808968[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_206491193835808968[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_206491193835808968[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_206491193835808968[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_206491193835808968[54] = 0;
   out_206491193835808968[55] = 0;
   out_206491193835808968[56] = 0;
   out_206491193835808968[57] = 0;
   out_206491193835808968[58] = 0;
   out_206491193835808968[59] = 0;
   out_206491193835808968[60] = 0;
   out_206491193835808968[61] = 0;
   out_206491193835808968[62] = 0;
   out_206491193835808968[63] = 0;
   out_206491193835808968[64] = 0;
   out_206491193835808968[65] = 0;
}
void h_14(double *state, double *unused, double *out_4901740455674426920) {
   out_4901740455674426920[0] = state[10];
   out_4901740455674426920[1] = state[11];
   out_4901740455674426920[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2198568007109749365) {
   out_2198568007109749365[0] = 0;
   out_2198568007109749365[1] = 0;
   out_2198568007109749365[2] = 0;
   out_2198568007109749365[3] = 0;
   out_2198568007109749365[4] = 0;
   out_2198568007109749365[5] = 0;
   out_2198568007109749365[6] = 0;
   out_2198568007109749365[7] = 0;
   out_2198568007109749365[8] = 0;
   out_2198568007109749365[9] = 0;
   out_2198568007109749365[10] = 1;
   out_2198568007109749365[11] = 0;
   out_2198568007109749365[12] = 0;
   out_2198568007109749365[13] = 0;
   out_2198568007109749365[14] = 0;
   out_2198568007109749365[15] = 0;
   out_2198568007109749365[16] = 0;
   out_2198568007109749365[17] = 0;
   out_2198568007109749365[18] = 0;
   out_2198568007109749365[19] = 0;
   out_2198568007109749365[20] = 0;
   out_2198568007109749365[21] = 0;
   out_2198568007109749365[22] = 0;
   out_2198568007109749365[23] = 0;
   out_2198568007109749365[24] = 0;
   out_2198568007109749365[25] = 0;
   out_2198568007109749365[26] = 0;
   out_2198568007109749365[27] = 0;
   out_2198568007109749365[28] = 0;
   out_2198568007109749365[29] = 0;
   out_2198568007109749365[30] = 0;
   out_2198568007109749365[31] = 0;
   out_2198568007109749365[32] = 0;
   out_2198568007109749365[33] = 1;
   out_2198568007109749365[34] = 0;
   out_2198568007109749365[35] = 0;
   out_2198568007109749365[36] = 0;
   out_2198568007109749365[37] = 0;
   out_2198568007109749365[38] = 0;
   out_2198568007109749365[39] = 0;
   out_2198568007109749365[40] = 0;
   out_2198568007109749365[41] = 0;
   out_2198568007109749365[42] = 0;
   out_2198568007109749365[43] = 0;
   out_2198568007109749365[44] = 0;
   out_2198568007109749365[45] = 0;
   out_2198568007109749365[46] = 0;
   out_2198568007109749365[47] = 0;
   out_2198568007109749365[48] = 0;
   out_2198568007109749365[49] = 0;
   out_2198568007109749365[50] = 0;
   out_2198568007109749365[51] = 0;
   out_2198568007109749365[52] = 0;
   out_2198568007109749365[53] = 0;
   out_2198568007109749365[54] = 0;
   out_2198568007109749365[55] = 0;
   out_2198568007109749365[56] = 1;
   out_2198568007109749365[57] = 0;
   out_2198568007109749365[58] = 0;
   out_2198568007109749365[59] = 0;
   out_2198568007109749365[60] = 0;
   out_2198568007109749365[61] = 0;
   out_2198568007109749365[62] = 0;
   out_2198568007109749365[63] = 0;
   out_2198568007109749365[64] = 0;
   out_2198568007109749365[65] = 0;
}
void h_33(double *state, double *unused, double *out_3600356268595564734) {
   out_3600356268595564734[0] = state[16];
   out_3600356268595564734[1] = state[17];
   out_3600356268595564734[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8475818791256493098) {
   out_8475818791256493098[0] = 0;
   out_8475818791256493098[1] = 0;
   out_8475818791256493098[2] = 0;
   out_8475818791256493098[3] = 0;
   out_8475818791256493098[4] = 0;
   out_8475818791256493098[5] = 0;
   out_8475818791256493098[6] = 0;
   out_8475818791256493098[7] = 0;
   out_8475818791256493098[8] = 0;
   out_8475818791256493098[9] = 0;
   out_8475818791256493098[10] = 0;
   out_8475818791256493098[11] = 0;
   out_8475818791256493098[12] = 0;
   out_8475818791256493098[13] = 0;
   out_8475818791256493098[14] = 0;
   out_8475818791256493098[15] = 0;
   out_8475818791256493098[16] = 1;
   out_8475818791256493098[17] = 0;
   out_8475818791256493098[18] = 0;
   out_8475818791256493098[19] = 0;
   out_8475818791256493098[20] = 0;
   out_8475818791256493098[21] = 0;
   out_8475818791256493098[22] = 0;
   out_8475818791256493098[23] = 0;
   out_8475818791256493098[24] = 0;
   out_8475818791256493098[25] = 0;
   out_8475818791256493098[26] = 0;
   out_8475818791256493098[27] = 0;
   out_8475818791256493098[28] = 0;
   out_8475818791256493098[29] = 0;
   out_8475818791256493098[30] = 0;
   out_8475818791256493098[31] = 0;
   out_8475818791256493098[32] = 0;
   out_8475818791256493098[33] = 0;
   out_8475818791256493098[34] = 0;
   out_8475818791256493098[35] = 0;
   out_8475818791256493098[36] = 0;
   out_8475818791256493098[37] = 0;
   out_8475818791256493098[38] = 0;
   out_8475818791256493098[39] = 1;
   out_8475818791256493098[40] = 0;
   out_8475818791256493098[41] = 0;
   out_8475818791256493098[42] = 0;
   out_8475818791256493098[43] = 0;
   out_8475818791256493098[44] = 0;
   out_8475818791256493098[45] = 0;
   out_8475818791256493098[46] = 0;
   out_8475818791256493098[47] = 0;
   out_8475818791256493098[48] = 0;
   out_8475818791256493098[49] = 0;
   out_8475818791256493098[50] = 0;
   out_8475818791256493098[51] = 0;
   out_8475818791256493098[52] = 0;
   out_8475818791256493098[53] = 0;
   out_8475818791256493098[54] = 0;
   out_8475818791256493098[55] = 0;
   out_8475818791256493098[56] = 0;
   out_8475818791256493098[57] = 0;
   out_8475818791256493098[58] = 0;
   out_8475818791256493098[59] = 0;
   out_8475818791256493098[60] = 0;
   out_8475818791256493098[61] = 0;
   out_8475818791256493098[62] = 1;
   out_8475818791256493098[63] = 0;
   out_8475818791256493098[64] = 0;
   out_8475818791256493098[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_9094854505137700114) {
  H(in_vec, out_9094854505137700114);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7189592963740075634) {
  err_fun(nom_x, delta_x, out_7189592963740075634);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7508967909468565488) {
  inv_err_fun(nom_x, true_x, out_7508967909468565488);
}
void live_H_mod_fun(double *state, double *out_6406871339729092844) {
  H_mod_fun(state, out_6406871339729092844);
}
void live_f_fun(double *state, double dt, double *out_8326757184263707931) {
  f_fun(state,  dt, out_8326757184263707931);
}
void live_F_fun(double *state, double dt, double *out_6845140873145997354) {
  F_fun(state,  dt, out_6845140873145997354);
}
void live_h_4(double *state, double *unused, double *out_1404230682439242376) {
  h_4(state, unused, out_1404230682439242376);
}
void live_H_4(double *state, double *unused, double *out_1958599729245028118) {
  H_4(state, unused, out_1958599729245028118);
}
void live_h_9(double *state, double *unused, double *out_4901740455674426920) {
  h_9(state, unused, out_4901740455674426920);
}
void live_H_9(double *state, double *unused, double *out_2198568007109749365) {
  H_9(state, unused, out_2198568007109749365);
}
void live_h_10(double *state, double *unused, double *out_2989697102392970489) {
  h_10(state, unused, out_2989697102392970489);
}
void live_H_10(double *state, double *unused, double *out_1394276942919263448) {
  H_10(state, unused, out_1394276942919263448);
}
void live_h_12(double *state, double *unused, double *out_7092051119784227734) {
  h_12(state, unused, out_7092051119784227734);
}
void live_H_12(double *state, double *unused, double *out_2579698754292621785) {
  H_12(state, unused, out_2579698754292621785);
}
void live_h_31(double *state, double *unused, double *out_5309002211289508523) {
  h_31(state, unused, out_5309002211289508523);
}
void live_H_31(double *state, double *unused, double *out_5325261786617635494) {
  H_31(state, unused, out_5325261786617635494);
}
void live_h_32(double *state, double *unused, double *out_2904342480900863083) {
  h_32(state, unused, out_2904342480900863083);
}
void live_H_32(double *state, double *unused, double *out_984257010884528606) {
  H_32(state, unused, out_984257010884528606);
}
void live_h_13(double *state, double *unused, double *out_4995199596212226186) {
  h_13(state, unused, out_4995199596212226186);
}
void live_H_13(double *state, double *unused, double *out_206491193835808968) {
  H_13(state, unused, out_206491193835808968);
}
void live_h_14(double *state, double *unused, double *out_4901740455674426920) {
  h_14(state, unused, out_4901740455674426920);
}
void live_H_14(double *state, double *unused, double *out_2198568007109749365) {
  H_14(state, unused, out_2198568007109749365);
}
void live_h_33(double *state, double *unused, double *out_3600356268595564734) {
  h_33(state, unused, out_3600356268595564734);
}
void live_H_33(double *state, double *unused, double *out_8475818791256493098) {
  H_33(state, unused, out_8475818791256493098);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
